<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1M00.sch"?>

<Ingest_LDD 
 xmlns="http://pds.nasa.gov/pds4/pds/v1"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://pds.nasa.gov/pds4/pds/v1 
                     https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1M00.xsd">

    <name>Geometry Dictionary Full</name>
    <ldd_version_id>1.9.7.0</ldd_version_id>
    <dictionary_type>Discipline</dictionary_type>
    <full_name>Edward A. Guinness</full_name>
    <steward_id>geo</steward_id>
    <namespace_id>geom</namespace_id>
    <comment>
        Build with: lddtool -pl ingest_file >log_file
           add J switch if a JSON file is needed.
           
    	Classes used from the PDS namespace
    	  - Local_Internal_Reference
    	  - Internal_Reference
    	Attributes used from the PDS namespace
    	  - local_identifier
    	  - name
    	  - description
    	  - comment
    	  - kernel_type
    	  - local_reference_type
    	  - reference_type  
    	
    	version 1.0.0 2015-04-30
        - Initial release.
        version 1.1.0 2015-08-17 
        - Updated to IM version 1.4.1.0
        - Removed attributes body_spice_id and frame_spice_id. body_spice_name and frame_spice_name are the supported attributes.
        - Geometry_Identification_Base was replaced by Body_Identification_Base and Frame_Identification_Base. 
          -- The preceding two changes affect these classes: Central_Body_Identification, 
             Coordinate_System_Origin_Identification, Observer_Identification, Target_Identification.
        - Added the class Coordinate_Space_SPICE. 
        - SPICE_Kernel_Identification was replaced with the new class Coordinate_Space_SPICE in Coordinate_Space_Identification. 
        - Replaced local_spice_kernel_name with spice_kernel_file_name.
        - Changed kernel_type to pds:kernel_type.
          -- The preceding four changes affect Coordinate_Space_Present and Coordinate_Space_Reference.
        - horizontal/vertical_pixel_scale_factor now have unit of measure type Units_of_Map_scale (these are all of the
          form "[length]/pixel").
        - In Geometry_Orbiter class, expanded description to include class use. 
        - Quaternion_non_SPICE_Style contained a double underscore in the class name. That typo has been corrected.
        - Updated a number of the attribute and class definitions/descriptions 
        - In the Geometry_Orbiter class, Reference_Frame_Identification was removed. 
        - Added class Coordinate_Space_Indexed
        - Moved solution_id attribute from Coordinate_Space_Index to Coordinate_Space_Indexed
        - Removed model_desc_file_name from Camera_Model_Parameters
        - Replaced Coordinate_Space_Index with Coordinate_Space_Indexed in Coordinate_Space_Identification
        - Added Local_Internal_Reference to Coordinate_Space_Index
        - Added attribute coordinate_space_frame_type
        - Renamed Device_Motor_Clicks* to Device_Motor_Counts*
        - Renamed Device_Position_Vector to Vector_Device_Gravity
        - Renamed index_value_no_units to index_value_number.
        - Completely revised quaternions, removed all four existing quaternion classes,
          Quaternion_SPICE, Quaternion_non_SPICE, Rotation_Quaternion, and Device_Orientation_Quaternion. 
          Introduced three new quaternion classes, Quaternion_Base, Quaternion_1, and Quaternion_2. The latter 
          two are extensions of Quaternion_Base. 
        - Revised the definitions of the four components of quaternions.
        - Added the classes Rotate_From, Rotate_To, and the attribute rotation_direction to 
          support the new quaternion classes.
        - Added Coordinate_Space_Present to the Articulation_Device_Parameters class.
        - Renamed Coordinate_System to Coordinate_System_Identification.
        - In Coordinate_Space_Indexed changed Coordinate_Space_Index from parent_of to component_of
        - Removed pds:Local_Internal_Reference from Coordinate_Space_Index, Body_Identification_Base, Frame_Identification_Base.
        - Removed the quaternions from the Articulation_Device_Parameters class.
        - Cleaned up some more definitions.
        version 1.2.0   2015-10-15
        - Updated to IM version 1.5.0.0
        - Redefined the Display_Direction class and removed the import of the 
          Display dictionary.
        - Designated Body_Identification_Base as 'abstract'
        - Renamed Target_Identification to Geometry_Target_Identification
        - Renamed horizontal/vertical_pixel_size_angular to horizontal/vertical_pixel_field_of_view
        - Renamed horizontal/vertical_pixel_size_projected to horizontal/vertical_pixel_footprint
        - Removed Body_Identification_Base from Image_Display
        - removed body_positive_pole_clock_angle
        - added central_body_positive_pole_clock_angle
        - Removed Local_Internal_Reference from several classes
        - Removed horizontal/vertical_pixel_scale_factor
        - Updated horizontal/vertical_pixel_field_of_view descriptions
        - Added new, required attribute pixel_field_of_view_method attribute to Pixel_Dimensions
        - Allow for multiple Pixel_Size_Projected classes to be specified in the Pixel_Dimensions class.
        - Revised the definition of Footprint_Vertices and set the minimum number of vertices to two.
        - Added choice between reference_location and new distance attribute in Pixel_Size_Projected class.
        - Added 'Constant' (or some other applicable term per rationale) as a permissible value to Pixel_Size_Projected and reference_location.
        - Require horizontal_pixel_footprint and vertical_pixel_footprint to be specified in Pixel_Size_Projected class.
        - added cahvore_model_type and cahvore_model_parameter attributes to CAHVORE_Model 
        - added new positive_azimuth_direction and positive_elevation_direction attributes to Coordinate_Space_Definition class
        - added new instrument_azimuth, instrument_elevation attributes to Derived_Geometry
        - added new selected_instrument_id attribute to Articulation_Device_Parameters for currently selected instrument
        - added new device_phase attribute to Articulation_Device_Parameters
        - added new Quaternion_Model_Transform and Vector_Model_Transform classes to the Camera_Model_Parameters class
        - fixed bug with Vector_Cartesian_No_Units class - local identifier was Vector_Cartesian_Unit and overwriting that class
        - changed parent_of Vector_Axis class to Vector_Cartesian_No_Units
        - changed parent_of Vector_Device_Gravity class to Vector_Cartesian_Unit instead of Position_Cartesion_Vector_Base since it is a unit vector
        - added pds:Local_Internal_Reference to Coordinate_Space_Identification class, specifically for properly defining a Coordinate_Space_Reference. 
        - updated the definition for coordinate_space_frame_type
        - changed ordering of Coordinate_Space_Indexed to make more logical sense
        - changed local_identifier attribute in Coordinate_Space_Definition class to allow for mutliple identifiers for a Coordinate Space
        - removed units from x_pixel, y_pixel, z_pixel
        - changed x_no_units, y_no_units, z_no_units to x,y,z
        - removed Coordinate_Space_Reference from CAHV_Model class. It only needs to be in the Camera_Model_Parameters class
        - north/east_azimuth - expanded definition to clarify direction of measurement.
        - renamed the Distances class to Specific_Distances, removed the Distance_Generic class 
          from that class and added it to Geometry_Orbiter. 
        - removed the Specific_Position_Vectors and Specific_Velocity_Vectors classes. The remaining Vector aggragating classss
          are Specific_Cartesian_Vectors and Specific_Planetocentric_Vectors.
        - Renamed 59 classes for clarity or to make the order of the class name segments consistent with SR requirements. See 
          the separate class-rename-20151016.txt document for the complete list.
        version 1.2.1   2015-11-12 (this version not released for review)
        - Inserted a missing ")" in Schematron file to correct a typo.
        - changed several instances of a double underscore to a single underscore.
        - Removed Local_Reference_Type from geom:Display_Direction.
        - Added Schematron rule for Image_Display_Geometry/Local_Internal_Reference/Reference_Type to verify 
          use of the enumerated value "display_to_data_object".
        - In Geometry_Orbiter, moved the class Geometry_Target_Identification ahead of the class Coordinate_System Identification. 
          This results in placing at the beginning of the class, the items most likely to have multiple  
          values and hence result in multiple instances of the Geometry_Orbiter class.
        version 1.3.0.0   2016-07-15
        - Updated to IM version 1.6.0.0
        - Changed to four place version number.
        - Added geometry_start_time and geometry_stop_time, and expanded the definitions for the three variations
          of geometry_*_time.
        - Made geom:Display_Direction required even if the disp:Display_Direction is in the label.
        - Removed the option to use Quaternion_1 from the Image_Display_Geometry class since there is no way to identify 
          the relevant end points in the enclosing class.
        - Revised the definition of right_ascension_angle.
        - Changed the description and units of right_ascension_hour_angle to decimal hours.
        - Revised the definition of declination_angle.
        - In Object_Orientation_Clock_Angles, made Reference_Frame_Identification optional instead of required.
        - Added or modified attributes minimum_*, maximum_*, start_*, stop_*; where * is any of target_geocentric_distance,  
          target_heliocentric_distance, target_ssb_distance, spacecraft_geocentric_distance, spacecraft_heliocentric_distance, 
          spacecraft_to_central_body_distance, spacecraft_to_target_center_distance, spacecraft_to_target_boresight_intercept_distance, 
          spacecraft_to_target_subspacecraft_distance, emission_angle, incidence_angle, phase_angle, solar_elongation, latitude, 
          longitude, subspacecraft_azimuth, subspacecraft_latitude, subspacecraft_longitude, subsolar_azimuth, subsolar_latitude, 
          or subsolar_longitude.
        - Added the attribute lat_long_description to support start_ and stop_ latitude and longitude.
        - Added the classes *_Specific, *_Min_Max, *_Start_Stop; where * is any of Distances, Illumination, or Surface_Geometry.
        - Removed the classes Illumination_FOV_Range_Values (replaced with the class Illumination_Min_Max), and 
          Illumination_Single_Values (replaced with the class Illumination_Specific).
        - Removed the attribute illumination_range_designation.
        - Changed the names of several specific distance classes from spacecraft_to_*_distance to spacecraft_*_distance.
        - Renamed Specific_Distances to Distances_Specific.
        - Renamed Surface_Geometry to Surface_Geometry_Specific.
        - Renamed Illumination_Single_Values to Illumination_Specific.
        - Renamed Specific_Cartesian_Vectors to Vectors_Cartesian_Specific.
        - Renamed Specific_Planetocentric_Vectors to Vectors_Planetocentric_Specific.
        - Added or redefined several classes for grouping: Orbiter_Identification, Distances, Surface_Geometry, 
          Illumination_Geometry, Vectors.
        - Reorganized the contents of Geometry_Orbiter.
        - Provided Schematron rules to ensure if one member of a min-max or start-stop pair is used, both are used.
        - Renamed lat_long_description to lat_long_method
        - Renamed Quaternion_1 to Quaternion_Plus_Direction
        - Renamed Quaternion_2 to Quaternion_Plus_To_From
        - In List_Index_Base removed Local_Internal_Reference and made the cardinality of the choice to require at 
          least one of the options.
        - Updated the definitions of several attributes supporting the Lander portion of the dictionary.
        - Changed pds:Internal_Reference to geom:Internal_Reference
        - Changed pds:Local_Internal_Reference to geom:Local_Internal_Reference
        - In the Geometry class, removed the choice statement which made one of Geometry_Orbiter and Geometry_Lander required. Now both are optional.
        version 1.3.1.0   2016-07-29
        - Added the optional attribute kernel_provenance to the SPICE_Kernel_Identification class.
        - Renamed geometry_reference_time, geometry_start/stop_time, and coordinate_system_time, by appending _utc to the attribute name.
        - Added the optional attribute geometry_reference_time_tdb
        - Changed the cardinality of Quaternion_Plus_To_From in the Image_Display_Geometry to allow multiple instances.
        - Added the optional Expanded_Geometry class to the Geometry class
        version 1.4.0.0   2016-09-26
        - Verified that Internal_Reference and Local_Internal_Reference refer to the PDS namespace in class definitions
        - Edited Schematron rules to change geom:Internal_Reference to pds:Internal_Reference
        - Edited Schematron rules to match Internal_Reference contexts with reference_type rule_test
        - Edited Schematron messages to be more user-friendly
        - Remove reference_type and local_reference_type from Schematron rule contexts
        - Edited Schematron rules to change geom:Local_Internal_Reference to pds:Local_Internal_Reference
        - Edited Schematron rules to match Local_Internal_Reference contexts with local_reference_type rule_text
        version 1.4.0.1  2016-11-10
        - Changed pds:name to geom:name in the schematron rules 
        version 1.5.0.0  2017-06-19
        - Regenerated the schema and other files because of a bug in the LDDTool - This changed the classes:
               Coordinate_Space_Identification, Coordinate_Space_Present, Coordinate_Space_Reference
        - Changed the maxoccurs to unbounded for Coordinate_Space_Index in Coordinate_Space_Indexed
        - Changed the choice in Derived_Geometry to include all optional attributes. This was done to ensure that the class contained at least one
               attribute when included in a label.
        version 1.5.1.0  2017-09-20
        - Added index_value_number to List_Index_Temperature to specify DN temperature counts in addition to the EU temperature
        - Updated the definition for List_Index_Temperature to include that
        - Fixed bug with Vector_Entrance to use Vector_Cartesian_Unit instead of Vector_Cartesian_Position_Base
        - Updated for PDS model 1.9.0.0
        version 1.5.2.0  2018-07-25
        - Updated for PDS information model 1.10.0.0
        - In Image_Display_Geometry, moved Object_Orientation_Clock_Angles into the choice statement.
        version 1.5.3.0  2018-07-25
        - Updated for PDS information model 1.10.1.0
        version 1.6.0.0  2018-07-27
        - Changed Optical_Terms to Vector_Optical, reparented it to Vector_Cartesian_Unit, and fixed the definition.
        - Changed Vector_Entrance to Entrance_Terms, reparented it to Polynomial_Coefficients_3, and fixed the definition.
        - Rewrote definitions for CAHV_Model, CAHVOR_Model, CAHVORE_Model, Vector_Center, Vector_Horizontal, Vector_Vertical, and Radial_Terms.
        - Minor revisions to definitions for Camera_Model_Parameters, Coordinate_Space_Present, Coordinate_Space_Reference, instrument_azimuth,
                instrument_elevation, Quaternion_Plus_Direction, solar_azimuth, geometry_start_time_utc, and geometry_stop_time_utc.
        - Minor changes to definitions of incidence_angle and phase_angle.
        version 1.6.1.0 2018-12-05
        - Changed the cardinality (maxoccurs) of Object_Orientation_RA_Dec in Image_Display_Geometry from 3 to unlimited to support 
                request for MESSENGER MDIS migration to PDS4.
        version 1.7.0.0 2019-04-19     
        - Set the element_flag to "true" for the Coordinate_Space_Reference class so that the class is exposed for others to use.
        version 1.7.1.0 2019-05-06
        - Added attribute quaternion_measurement_method and included it in the Coordinate_Space_Definition class.
        - Added local_identifier to the Articulation_Device_Parameters
        version 1.7.2.0 2020-05-04; 2020-07-10
        - Modified definitions for quaternion_measurment_method.
        - Added the Interpolation class to support documentation of camera model interpolation. Included in the 
               Camera_Model_Parameters class.
        - Added PSPH camera model (5 classes and 2 attributes); added enumerated list for model_type relative
               to camera models.
        version 1.8.0.0 2020-07-31
        - Added Vector_Solar_Direction class to Derived_Geometry; made Vector_Axis_X/Y classes a restriction of the
               Vector_Cartesian_Unit class.
        - Added Coordinate_Space_Quality to Coordinate_Space_Definition.
        - Added Commanded_Geometry to Articulation_Device_Parameters 
        - have to edit schema to fix the "choice bug"
        version 1.8.1.0 2020-08-14 thru 2020-08-28
        - Added target_name, target_heliocentric_distance, and solar_image_clock_angle to the 
               Derived_Geometry class in the Geometry_Lander section. 
        - Changed attitude_propagation_counter data type from integer to real for M2020.
        - Added new attribute geometry_state, pds:description, pds:local_identifier to the start
               of the Geometry_Lander class
        - Added a Vector_Device_Gravity_Magnitude class to Articulation_Device_Parameters to support M2020.
        version 1.9.0.0 2020-10-16 thru 2020-12-09
        - Made  celestial_north_clock_angle and ecliptic_north_clock_angle nillable. 
               Added enumerated values for reference_type in Body_Identification_Base and Frame_Identification_Base.
               Added enumerated values for coordinate_space_frame_type.
               Changed enumerated flag to true for coordinate_space_frame_type
        Version 1.9.1.0?? 2020-12-16
        - Added enumerated value to coordinate_space_frame_type to support Mars2020.
        - Added class Device_Pose to Articulation_Device_Parameters to support Mars 2020.
        Version 1.9.2.0 2021-03-30
        - Added enumerated value to coordinate_space_frame_type to support Mars2020.
        Version 1.9.x.0 2021-04-22
        - Added three enumerated values (ROVER_FRAME, TOOL_FRAME, and Tool_Frame)
               to coordinate_space_frame_type to support Mars2020.
        Version 1.9.3.0 2021-07-13
        - Added yet another enumerated value (TURRET_FRAME and title case version)
               to coordinate_space_frame_type to support Mars2020.
        Version 1.9.3.0 2021-04-27
        - Added seven enumerated values in upper/lower case (PIXL_TOOL, WHEEL_RF, WHEEL_LF, WHEEL_RR, 
               WHEEL_LR, WHEEL_RM, WHEEL_LM) to coordinate_space_frame_type for Mars2020.
        - fixed typo traget -> target
        Version 1.9.5.0 2022-01-06
        - Added ORBITAL (upper and title case) to coordinate_space_frame_type for Mars2020.
        Version 1.9.6.0 2022-05-20
        - Added AEGIS_* (1 to 5) to coordinate_space_frame_type for Mars2020.
        Version 1.9.7.0 2023-10-12
        - Made the Display_Direction class optional and updated the definition. Added the 
        Quaternion_Plus_To_From class to the main Geometry_Orbiter class to support
           migration of NEAR data.
    </comment>
    
    <last_modification_date_time>2023-10-12</last_modification_date_time>

<!-- Attributes -->
    
<!-- General geometry attributes  -->

    <DD_Attribute>
        <name>geometry_reference_time_utc</name>
        <version_id>1.0</version_id>
        <local_identifier>geometry_reference_time_utc</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>For some observations, geometric parameters are given as instantaneous 
        	values at a specific time. Another set of instantaneous parameters are the 
        	parameters which give the minimum and maximum values in the product. 
        	In some cases, these range values are all calculated for the same time. 
        	If the label includes single valued geometric parameters or min/max range parameters 
        	determined for a specific time, geometry_reference_time_utc gives the time for which 
        	these values were calculated and must be given in the label.   	
        	
          For some instruments, particularly those with relatively large exposure durations, 
          (e.g., push broom cameras, many imaging spectrometers), many geometric quantities 
          are given as ranges. If those range parameters are associated with the beginning 
          and end of the observation (start_parameter/stop_parameter), geometry_start_time_utc/stop_time 
          must be given. 
                    
          Comments within the label should be used to ensure the parameter vs. time association 
          is unambiguous.
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Date_Time_YMD_UTC</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>geometry_reference_time_tdb</name>
        <version_id>1.0</version_id>
        <local_identifier>geometry_reference_time_tdb</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The geometry reference time given in the 'Barycentric Dynamical Time' 
        	  system, as a number of elapsed seconds since the J2000 epoch. This is consistent 
        	  with the definition of 'ephemeris time' as used in the SPICE toolkit. The value 
        	  must correspond to the time specified in the geometry_reference_time_utc attribute.
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Time</unit_of_measure_type>
       </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>geometry_start_time_utc</name>
        <version_id>1.0</version_id>
        <local_identifier>geometry_start_time_utc</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The pair of geometry_start_time_utc/geometry_stop_time_utc may be given in the 
        	label for any observation. The pair is generally used for fairly long duration 
        	observations (a substantial portion of an hour to several hours). geometry_start_time_utc 
        	gives the time at the beginning of the observation.	When either geometry_start_time_utc 
        	or geometry_stop_time_utc is given, both must be provided. 

          Within the Geometry discipline, there are two options for providing geometric parameters
          as a range of values. A parameter may be given as a pair where the parameter values are 
          those at the beginning and end of the observation (start_parameter, stop_parameter). 
          If a (start_parameter, stop_parameter) pair is used for any geometric parameter, the pair 
          (geometry_start_time_utc/geometry_stop_time_utc) must be given.
          
          Another option to provide geometric parameters as a pair is (minimum_parameter, maximum_parameter)
          defining a range of values where the values are the minimum and maximum values of that 
          parameter for the entire observation.  
          
          Comments within the label should be used to ensure the parameter vs. time association 
          is unambiguous.
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Date_Time_YMD_UTC</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>geometry_stop_time_utc</name>
        <version_id>1.0</version_id>
        <local_identifier>geometry_stop_time_utc</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The pair of geometry_start_time_utc/geometry_stop_time_utc may be given in the 
        	label for any observation. The pair is generally used for fairly long duration  
          observations (a substantial portion of an hour to several hours). geometry_stop_time_utc 
        	gives the time at the end of the observation.	When either geometry_start_time_utc 
        	or geometry_stop_time_utc is given, both must be provided.

          Within the Geometry discipline, there are two options for providing geometric parameters
          as a range of values. A parameter may be given as a pair where the parameter values are 
          those at the beginning and end of the observation (start_parameter, stop_parameter). 
          If a (start_parameter, stop_parameter) pair is used for any geometric parameter, the pair 
          (geometry_start_time_utc/geometry_stop_time_utc) must be given.
          
          Another option to provide geometric parameters as a pair is (minimum_parameter, maximum_parameter)
          defining a range of values where the values are the minimum and maximum values of that 
          parameter for the entire observation.  
          
          Comments within the label should be used to ensure the parameter vs. time association 
          is unambiguous.          
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Date_Time_YMD_UTC</value_data_type>
       </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>geometry_state</name>
        <version_id>1.0</version_id>
        <local_identifier>geometry_state</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>Specifies the state or configuration of this instance of Geometry_Lander applies. 
            Use of this attribute enables multiple instances of Geometry_Lander, describing the 
            geometry under different conditions. Note that it is legal for more than one instance
            to have the same geometry_state, in which case the local_identifier should be used 
            to differentiate the instances, along with description. If not present, the semantics
            of "Telemetry" should be assumed. It is not required that instances be retained; 
            a derived product may have an Adjusted instance but remove the Telemetry one, 
            for example.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>coordinate_system_type</name>
        <version_id>1.0</version_id>
        <local_identifier>coordinate_system_type</local_identifier>
        <nillable_flag>true</nillable_flag>
        <submitter_name>M. Gordon</submitter_name>
        <definition>The coordinate_system_type distinguishes between options such as
           rectangular, spherical, planetocentric, etc.
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Cartesian</value>
                <value_meaning>The coordinate system uses rectangular coordinates. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Azimuth-Elevation</value>
                <value_meaning>The coordinate system uses azimuth-elevation coordinates. 
                  Azimuth: angle from +X axis to projection of position vector on x-y 
                  plane increases in clockwise direction (-180 to +180).
                  Elevation: angle between position vector and x-y plane (-90 to +90).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Spherical</value>
                <value_meaning>The coordinate system uses spherical coordinates.
                  Longitude: angle from +X axis to projection of position vector on 
                  X-Y plane increases in clockwise direction (0 to 360).
                  Colatitude: angle between +Z axis and position vector (0 to 180).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Planetocentric</value>
                <value_meaning>The coordinate system uses planetocentric coordinates. 
                    Planetocentric longitude increases positively eastward (-180 to +180).
                    Planetocentric latitude increases positively northward (-90 to +90).
                    For planets and their satellites the +Z axis (+90 latitude) always 
                    points to the north side of the invariable plane (the plane whose 
                    normal vector is the angular momentum vector of the solar system).
                    For dwarf planets, asteroids and comets the IAU defines their positive 
                    pole such that their spin is in the right hand sense about 
                    their positive pole. The positive pole may point above or below the 
                    invariable plane of the solar system. This revision by the IAU Working 
                    Group (2006) inverts what had been the direction of the north pole for 
                    Pluto, Charon and Ida. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Planetodetic</value>
                <value_meaning>The coordinate system uses planetodetic coordinates.
                   For planets and their satellites the +Z axis (+90 latitude) always 
                   points to the north side of the invariable plane (the plane whose 
                   normal vector is the angular momentum vector of the solar system).
                   Planetodetic longitude increases positively eastward (-180 to +180).
                   Planetodetic latitude is tied to a reference ellipsoid. For a point, 
                   P, on a reference ellipsoid, angle measured from X-Y plane to the 
                   surface normal at the point of interest. For other points, equals 
                   latitude at the nearest point on the reference ellipsoid. Increases 
                   positively northward (-90 to +90).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Planetographic</value>
                <value_meaning>The coordinate system uses planetographic coordinates. 
                  For planet and satellite planetographic coordinate systems: 
                  Planetographic longitude is usually defined such that the sub-observer 
                  longitude increases with time as seen by a distant, fixed observer 
                  (0 to 360). The earth, moon and sun are exceptions; planetographic 
                  longitude is positive east by default (0 to 360). Planetographic 
                  latitude is planetodetic latitude (-90 to +90).
                  For dwarf planets, asteroids and comets: there are multiple, inconsistent 
                  standards. Currently, for these objects, PDS permits planetographic 
                  coordinates to be provided in addition to, not in lieu of, either 
                  planetocentric or planetodetic coordinates.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>coordinate_system_time_utc</name>
        <version_id>1.0</version_id>
        <local_identifier>coordinate_system_time_utc</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>M. Gordon</submitter_name>
        <definition>The coordinate_system_time_utc provides the instantiation 
          time for the coordinate system.
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Date_Time_YMD_UTC</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>body_spice_name</name>
        <version_id>1.0</version_id>
        <local_identifier>body_spice_name</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The body_spice_name attribute is a NAIF-recognized string 
            identifier for a physical object (spacecraft, planet, instrument 
            transmitter, system barycenter, etc.), associated with the data.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>frame_spice_name</name>
        <version_id>1.0</version_id>
        <local_identifier>frame_spice_name</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The frame_spice_name attribute is a NAIF-recognized string 
            identifier for a reference frame associated with the data.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>reference_location</name>
        <version_id>1.0</version_id>
        <local_identifier>reference_location</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>M. Gordon</submitter_name>
        <definition>The reference_location indicates the position to which 
          values in the containing class apply. If the reference location is on 
          a target, the target is the one specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Boresight Intercept Point</value>
                <value_meaning>Values were determined for the point where the 
                               boresight vector intersects the designated target. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Subspacecraft Point</value>
                <value_meaning>Values were determined for the subspacecraft point 
                               on the designated target. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Target Center</value>
                <value_meaning>Values were determined for the center of the designated target. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
              <value>Constant</value>
              <value_meaning>Constant is used when the pixel scale does not vary, e.g., 
              	for telecentric lenses, maps, or cameras that look at constant, fixed targets, 
              	such as microscope stages.
              </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>reference_pixel_location</name>
        <version_id>1.0</version_id>
        <local_identifier>reference_pixel_location</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>M. Gordon</submitter_name>
        <definition>The reference_pixel_location indicates the position 
                    of the pixel to which values in the containing class apply.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Center</value>
                <value_meaning>Values were determined for the intersection of a 
                               vector through the center of the field of view 
                               with the specified target.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Upper Left Corner</value>
                <value_meaning>Values were determined for the intersection of a 
                               vector through the upper left corner of the field 
                               of view with the specified target.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Lower Left Corner</value>
                <value_meaning>Values were determined for the intersection of a 
                               vector through the lower left corner of the field  
                               of view with the specified target.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Upper Right Corner</value>
                <value_meaning>Values were determined for the intersection of a 
                               vector through the upper right corner of the field 
                               of view with the specified target.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Lower Right Corner</value>
                <value_meaning>Values were determined for the intersection of a 
                               vector through the lower right corner of the field 
                               of view with the specified target.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spice_kernel_file_name</name>
        <version_id>1.0</version_id>
        <local_identifier>spice_kernel_file_name</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The spice_kernel_file_name attribute provides the file name of a SPICE 
          kernel file used to process the data or to produce geometric quantities given 
          in the label. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_File_Name</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>kernel_provenance</name>
        <version_id>1.0</version_id>
        <local_identifier>kernel_provenance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>M. Gordon</submitter_name>
        <definition>The kernel_provenance attribute indicates whether a kernel file is a 
        	predict kernel, a reconstructed kernel, some combination of the two, or
        	a kernel for which the distinction is not applicable.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Predicted</value>
                <value_meaning>This kernel is a predict kernel (e.g. a pre-encounter 
                	predicted spacecraft trajectory SPK ).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Reconstructed</value>
                <value_meaning>This kernel is reconstructed based on improved information 
                	(e.g. a post-encounter reconstructed spacecraft trajectory SPK based on 
                	improved navigation information).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Mixed</value>
                <value_meaning>This kernel contains both reconstructed and predicted portions 
                	(e.g. a reconstructed spacecraft trajectory SPK with a run-out predicted tail).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Provenance Not Applicable</value>
                <value_meaning>This kernel does not fit into any of the other categories 
                	(e.g., LSKs, SCLKs, text PCKs).
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>vertical_coordinate_pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>vertical_coordinate_pixel</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>vertical_coordinate_pixel (line) is the vertical coordinate of a specific pixel. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Misc</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>horizontal_coordinate_pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>horizontal_coordinate_pixel</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>horizontal_coordinate_pixel (sample) is the horizontal coordinate of a specific pixel. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Misc</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
<!-- Attributes for the Object_Display classes.   -->

    <DD_Attribute>
        <name>horizontal_display_axis</name>
        <version_id>1.0</version_id>
        <local_identifier>horizontal_display_axis</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The horizontal_display_axis attribute
        identifies, by name, the axis of an Array (or Array subclass)
        that is intended to be displayed in the horizontal or "sample"
        dimension on a display device. The value of this attribute must
        match the value of one, and only one, axis_name attribute in an
        Axis_Array class of the associated Array.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>horizontal_display_direction</name>
        <version_id>1.0</version_id>
        <local_identifier>horizontal_display_direction</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The horizontal_display_direction attribute specifies the direction
            across the screen of a display device that data along the horizontal axis of
            an Array is supposed to be displayed. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Left to Right</value>
                <value_meaning>Data along the horizontal axis of an array should
                	be displayed from left to right.
                 </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Right to Left</value>
                <value_meaning>Data along the horizontal axis of an array should
                	be displayed from right to left.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>vertical_display_axis</name>
        <version_id>1.0</version_id>
        <local_identifier>vertical_display_axis</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The vertical_display_axis attribute
        identifies, by name, the axis of an Array (or Array subclass)
        that is intended to be displayed in the vertical or "line"
        dimension on a display device. The value of this attribute must
        match the value of one, and only one, axis_name attribute in an
        Axis_Array class of the associated Array.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>vertical_display_direction</name>
        <version_id>1.0</version_id>
        <local_identifier>vertical_display_direction</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The vertical_display_direction attribute specifies the direction
            along the screen of a display device that data along the vertical axis
            of an Array is supposed to be displayed. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Top to Bottom</value>
                <value_meaning>Data along the vertical axis of an array should
                	be displayed from the top to the bottom of the display device.
                 </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Bottom to Top</value>
                <value_meaning>Data along the vertical axis of an array should
                	be displayed from the bottom to the top of the display device.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>north_azimuth</name>
        <version_id>2.0</version_id>
        <local_identifier>north_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Assuming the image is displayed as defined by the Display_Direction 
                    class, the north_azimuth attribute provides the value of the angle 
                    between a line from the image center to the north pole and 
                    a reference line in the image plane. The reference line is 
                    a horizontal line from the image center to the middle right 
                    edge of the image. This angle is measured from the 
                    reference line and increases in a clockwise direction.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>east_azimuth</name>
        <version_id>2.0</version_id>
        <local_identifier>east_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Assuming the image is displayed as defined by the Display_Direction 
                  class, the east_azimuth attribute provides the value of the angle 
                  between a line from the image center to the east and a reference 
                  line in the image plane. The reference line is a horizontal line 
                  from the image center to the middle right edge of the image. This angle 
                  is measured from the reference line and increases in a clockwise direction.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>right_ascension_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>right_ascension_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The right_ascension_angle attribute provides the value of right 
            ascension (RA) as an angle. Right ascension is measured from the vernal 
            equinox or the first point of Aries, which is the place on the celestial 
            sphere where the Sun crosses the celestial equator from south to north at 
            the March equinox. Right ascension is measured continuously in a full circle
            from that equinox towards the east. Right ascension is used in conjunction 
            with the declination attribute to specify a point on the sky. Note Right 
            Ascension also may be given in hour angles in which case the appropriate 
            attribute is right_ascension_hour_angle.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>right_ascension_hour_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>right_ascension_hour_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The right_ascension_hour_angle attribute provides the value of right 
            ascension (RA) as in terms of hour angles (hh.xxx...). Right ascension 
            is measured from the vernal equinox or the first point of Aries, which is the 
            place on the celestial sphere where the Sun crosses the celestial equator from 
            south to north at the March equinox. Right ascension is measured continuously 
            in a full circle from that equinox towards the east. Right ascension is used in 
            conjunction with the declination attribute to specify a point on the sky.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Time</unit_of_measure_type>
            <specified_unit_id>hr</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>declination_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>declination_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The declination_angle (Dec) attribute provides the value of an angle  
                    on the celestial sphere, measured north from the celestial equator 
                    to the point in question. (For points south of the celestial 
                    equator, negative values are used.) Declination is used in 
                    conjunction with right ascension (right_ascension_angle or
                    right_ascension_hour_angle) to specify a point on the sky.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
       
    <DD_Attribute>
        <name>celestial_north_clock_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>celestial_north_clock_angle</local_identifier>
        <nillable_flag>true</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The celestial_north_clock_angle attribute specifies the 
                    direction of celestial north at the center of an image. 
                    It is measured from the 'upward' direction, clockwise to 
                    the direction toward celestial north, assuming 
                    the image is displayed as defined by the Display_Direction class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>celestial_east_clock_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>celestial_east_clock_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The celestial_east_clock_angle attribute specifies the 
                    direction of celestial east at the center of an image. 
                    It is measured from the 'upward' direction, clockwise to 
                    the direction toward celestial east, assuming 
                    the image is displayed as defined by the Display_Direction class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

   <DD_Attribute>
        <name>ecliptic_north_clock_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>ecliptic_north_clock_angle</local_identifier>
        <nillable_flag>true</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The ecliptic_north_clock_angle attribute specifies the 
                    direction of ecliptic north at the center of an image. 
                    It is measured from the 'upward' direction, clockwise to 
                    the direction toward ecliptic north, assuming 
                    the image is displayed as defined by the Display_Direction class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

   <DD_Attribute>
        <name>ecliptic_east_clock_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>ecliptic_east_clock_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The ecliptic_east_clock_angle attribute specifies the 
                    direction of ecliptic east at the center of an image. 
                    It is measured from the 'upward' direction, clockwise to 
                    the direction toward ecliptic east, assuming 
                    the image is displayed as defined by the Display_Direction class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

   <DD_Attribute>
        <name>sun_direction_clock_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>sun_direction_clock_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The sun_direction_clock_angle attribute specifies the 
                    direction of the sun as an angle measured from a line 'upward'   
                    from the center of the field of view, clockwise to 
                    the direction toward sun, assuming 
                    the image is displayed as defined by the Display_Direction class. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>central_body_positive_pole_clock_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>central_body_positive_pole_clock_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The central_body_positive_pole_clock_angle element specifies 
            the direction of the central body's rotation axis in an image. It is 
            measured from the 'upward' direction in the image, clockwise to the direction of 
            the positive rotational pole as projected into the image plane, assuming 
            the image is displayed as defined by the Display_Direction class. 
            The positive pole is defined as the pole toward which the thumb points when the  
            fingers of the right hand are curled in the body's direction of rotation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>target_positive_pole_clock_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>target_positive_pole_clock_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The target_positive_pole_clock_angle element specifies 
            the direction of the target body's rotation axis in an image. It is 
            measured from the 'upward' direction in the image, clockwise to the direction of 
            the positive rotational pole as projected into the image plane, assuming 
            the image is displayed as defined by the Display_Direction class. 
            The positive pole is defined as the pole toward which the thumb points when the  
            fingers of the right hand are curled in the body's direction of rotation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>target_north_pole_clock_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>target_north_pole_clock_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The target_north_pole_clock_angle element specifies 
            the direction of the target body's rotation axis in an image. It is 
            measured from the 'upward' direction in the image, clockwise to the direction of 
            the northern rotational pole as projected into the image plane, assuming 
            the image is displayed as defined by the Display_Direction class. 
            The north pole of a planet or any of its satellites in the solar system is 
            the pole of the rotation axis that is in the same celestial hemisphere 
            relative to the invariable plane of the solar system as Earth's North pole.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>central_body_north_pole_clock_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>central_body_north_pole_clock_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The central_body_north_pole_clock_angle element specifies 
            the direction of the central body's (e.g., planet's)rotation axis in an image. It is 
            measured from the 'upward' direction in the image, clockwise to the direction of 
            the northern rotational pole as projected into the image plane, assuming 
            the image is displayed as defined by the Display_Direction class. 
            The north pole of a planet or any of its satellites in the solar system is 
            the pole of the rotation axis that is in the same celestial hemisphere 
            relative to the invariable plane of the solar system as Earth's North pole.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>qcos</name>
        <version_id>1.0</version_id>
        <local_identifier>qcos</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>qcos is the scalar component of a quaternion. 
        qcos = cos(theta/2), where theta is the angle of rotation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>qsin1</name>
        <version_id>1.0</version_id>
        <local_identifier>qsin1</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>qsin1 is the first element of the vector component
          of a quaternion. qsin1 = x*sin(theta/2) where theta is the angle of 
          rotation and (x,y,z) is the unit vector around which the rotation occurs.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>qsin2</name>
        <version_id>1.0</version_id>
        <local_identifier>qsin2</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>qsin2 is the second element of the vector component
          of a quaternion. qsin2 = y*sin(theta/2) where theta is the angle of 
          rotation and (x,y,z) is the unit vector around which the rotation occurs.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>qsin3</name>
        <version_id>1.0</version_id>
        <local_identifier>qsin3</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>qsin3 is the third element of the vector component
          of a quaternion. qsin3 = z*sin(theta/2) where theta is the angle of 
          rotation and (x,y,z) is the unit vector around which the rotation occurs.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>rotation_direction</name>
        <version_id>1.0</version_id>
        <local_identifier>rotation_direction</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The rotation_direction attribute identifies the 
          direction of the rotation for a specific quaternion. This is 
          used when the two frames involved are unambiguously identifed
          in the enclosing classes. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Present to Reference</value>
                <value_meaning>The quaternion rotates the frame identifed by 
                  Coordinate_Space_Present to the frame identified by
                  Coordinate_Space_Reference.
                 </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Reference to Present</value>
                <value_meaning>The quaternion rotates the frame identifed by 
                  Coordinate_Space_Reference to the frame identified by
                  Coordinate_Space_Present.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Forward</value>
                <value_meaning>Reference frames are generally defined sequentially 
                  from a base reference frame (e.g., base frames might be ICRF, IAU 
                  Mars, or the landing site from which a rover begins its exploration).
                  rotation_direction = Forward corresponds to rotation in the 'direction' 
                  from the base frame.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Reverse</value>
                <value_meaning>Reference frames are generally defined sequentially 
                  from a base reference frame (e.g., base frames might be ICRF, IAU 
                  Mars, or the landing site from which a rover begins its exploration).
                  rotation_direction = Reverse corresponds to rotation toward the base frame.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>From Base</value>
                <value_meaning>Reference frames are generally defined sequentially 
                  from a base reference frame (e.g., base frames might be ICRF, IAU 
                  Mars, or the landing site from which a rover begins its exploration).
                  rotation_direction = Away From Base corresponds to rotation in the 'direction' 
                  from the base frame.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Toward Base</value>
                <value_meaning>Reference frames are generally defined sequentially 
                  from a base reference frame (e.g., base frames might be ICRF, IAU 
                  Mars, or the landing site from which a rover begins its exploration).
                  rotation_direction = Toward Base corresponds to rotation toward the base frame.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>quaternion_measurement_method</name>
        <version_id>1.1</version_id>
        <local_identifier>quaternion_measurement_method</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>Specifies the method by which the coordinate space was measured. This 
            provides an indication of the quality of the definition.</definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Unknown</value>
                <value_meaning>The attitude should not be trusted.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Tilt_Only</value>
                <value_meaning>The attitude estimate is only good for tilt (2-axis) determination.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Coarse</value>
                <value_meaning>The attitude estimate is complete (3-axis), but crude.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Fine</value>
                <value_meaning>The attitude estimate is complete.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Sun_Find</value>
                <value_meaning>Coordinate space orientation rotation was measured by finding the 
                    location of the sun in one or more images and comparing that to where the sun 
                    actually was at that time.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Bundle_Adjustment</value>
                <value_meaning>Coordinate space position and/or orientation was refined using a 
                    bundle adjustment process, minimizing error with respect to some fixed reference 
                    (such as an orbital map).</value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>attitude_propagation_counter</name>
        <version_id>1.0</version_id>
        <local_identifier>attitude_propagation_counter</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>Count in clock units of how long it has been since the last IMU reset,
            which relates to how good the attitude measurement is due to IMU drift.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>attitude_propagation_duration</name>
        <version_id>1.0</version_id>
        <local_identifier>attitude_propagation_duration</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>The number of seconds for how long it has been since the last IMU reset,
            which relates to how good the attitude measurement is due to IMU drift.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Time</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <!-- Attributes for the pixel dimensions class.   -->

    <DD_Attribute>
        <name>horizontal_pixel_field_of_view</name>
        <version_id>1.0</version_id>
        <local_identifier>horizontal_pixel_field_of_view</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The horizontal_pixel_field_of_view provides the angular measure of 
      the horizontal field of view of a single pixel, and is sometimes referred to as 
      the instantaneous field of view. The pixel_field_of_view_method attribute will 
      designate the method used to determine this value. If the pixel_field_of_view_method 
      attribute is not specified, see the camera documentation for more details.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    <DD_Attribute>
        <name>vertical_pixel_field_of_view</name>
        <version_id>1.0</version_id>
        <local_identifier>vertical_pixel_field_of_view</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The vertical_pixel_field_of_view provides the angular measure of  
      the vertical field of view of a single pixel, and is sometimes referred to as 
      the instantaneous field of view. The pixel_field_of_view_method attribute will 
      designate the method used to determine this value. If the pixel_field_of_view_method 
      attribute is not specified, see the camera documentation for more details. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    <DD_Attribute>
        <name>pixel_field_of_view_method</name>
        <version_id>1.0</version_id>
        <local_identifier>pixel_field_of_view_method</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The pixel_field_of_view_method provides the method used
          to get the values of the horizontal/vertical_pixel_field_view attributes. If the pixel
          field of view does not vary across the camera field of view, then this value is 'constant'.
          If the pixel field of view does vary across the camera field of view, the pixel field of
          view can be determined either by the center pixel of the camera or the average field of view
          of the pixel. See the camera documentation for more details.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>true</enumeration_flag>
          <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
          <unit_of_measure_type>Units_of_None</unit_of_measure_type>
          <DD_Permissible_Value>
            <value>Constant</value>
            <value_meaning>Pixel field of view does not vary across the camera field of view</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Central Pixel</value>
            <value_meaning>Pixel field of view varies across the camera field of view and represents 
                the FOV of the central pixel of the camera</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Average</value>
            <value_meaning>Pixel field of view varies across the camera field of view and represents 
                the average FOV of the pixel</value_meaning>
          </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    <DD_Attribute>
        <name>horizontal_pixel_footprint</name>
        <version_id>1.0</version_id>
        <local_identifier>horizontal_pixel_footprint</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The horizontal_pixel_footprint provides the                      
            the size of the horizontal field of view of a single pixel projected onto 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    <DD_Attribute>
        <name>vertical_pixel_footprint</name>
        <version_id>1.0</version_id>
        <local_identifier>vertical_pixel_footprint</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The vertical_pixel_footprint provides the size of                       
            the vertical field of view of a single pixel projected onto 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
<!-- Attributes for the surface geometry classes.   -->
    
    <DD_Attribute>
        <name>pixel_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>pixel_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The pixel_latitude attribute gives the value 
            of the planetocentric latitude on the target of the 
            projection of a specified pixel.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
   
    <DD_Attribute>
        <name>pixel_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>pixel_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The pixel_longitude attribute gives the value 
            of the planetocentric longitude on the target of the 
            projection of a specified pixel.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subsolar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>subsolar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The subsolar_azimuth attribute provides the value of the                      
            angle between the line from the center of an image to the                    
            subsolar point on the target and a horizontal reference line (in the                       
            image plane) extending from the image center to the middle right edge of the image.                                                     
            The values of this angle increase in a clockwise direction.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_subsolar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subsolar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subsolar_azimuth attribute identifies the value of
        	the subsolar azimuth at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subsolar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subsolar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subsolar_azimuth attribute identifies the value of
        	the subsolar azimuth at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

     <DD_Attribute>
        <name>minimum_subsolar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subsolar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subsolar_azimuth attribute identifies the initial 
        	end of the range of values for subsolar azimuth in an image.
        	Note that since subsolar azimuth has values in [0,360], if 
        	the range in the image crosses the horizontal reference corresponding 
        	to zero, the value of minimum_subsolar_azimuth will be greater than 
        	the value of the maximum_subsolar_azimuth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subsolar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subsolar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subsolar_azimuth attribute identifies the final 
        	end of the range of values for subsolar azimuth in an image.
        	Note that since subsolar azimuth has values in [0,360], if 
        	the range in the image crosses the horizontal reference corresponding 
        	to zero, the value of minimum_subsolar_azimuth will be greater than 
        	the value of the maximum_subsolar_azimuth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subsolar_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>subsolar_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The subsolar_latitude attribute gives the value 
            of the planetocentric latitude at the subsolar point on the target.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>start_subsolar_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subsolar_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subsolar_latitude attribute identifies the value of
        	the subsolar latitude at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subsolar_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subsolar_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subsolar_latitude attribute identifies the value of
        	the subsolar latitude at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_subsolar_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subsolar_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subsolar_latitude attribute identifies the initial 
        	end of the range of values for subsolar latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subsolar_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subsolar_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subsolar_latitude attribute identifies the final 
        	end of the range of values for subsolar latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subsolar_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>subsolar_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The subsolar_longitude attribute gives the value 
            of the planetocentric longitude at the subsolar point on the target.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_subsolar_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subsolar_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subsolar_longitude attribute identifies the value of
        	the subsolar longitude at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subsolar_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subsolar_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subsolar_longitude attribute identifies the value of
        	the subsolar longitude at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_subsolar_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subsolar_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subsolar_longitude attribute identifies the initial 
        	end of the range of values for subsolar longitude.
        	Note that since subsolar longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_subsolar_longitude will be greater than the value of the 
        	maximum_subsolar_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subsolar_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subsolar_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subsolar_longitude attribute identifies the final 
        	end of the range of values for subsolar longitude in an image.
        	Note that since subsolar longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_subsolar_longitude will be greater than the value of the 
        	maximum_subsolar_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subspacecraft_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>subspacecraft_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The subspacecraft_azimuth attribute provides the value of the                      
            angle between the line from the center of an image to the                    
            subspacecraft point on the target and a horizontal reference line (in the                       
            image plane) extending from the image center to the middle right edge of the image.                                                     
            The values of this angle increase in a clockwise direction.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_subspacecraft_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subspacecraft_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subspacecraft_azimuth attribute identifies the value of
        	the subspacecraft azimuth at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subspacecraft_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subspacecraft_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subspacecraft_azimuth attribute identifies the value of
        	the subspacecraft azimuth at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_subspacecraft_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subspacecraft_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subspacecraft_azimuth attribute identifies the initial 
        	end of the range of values for subspacecraft azimuth in an image.
        	Note that since subspacecraft azimuth has values in [0,360], if 
        	the range in the image crosses the horizontal reference corresponding 
        	to zero, the value of minimum_subspacecraft_azimuth will be greater than 
        	the value of the maximum_subspacecraft_azimuth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subspacecraft_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subspacecraft_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subspacecraft_azimuth attribute identifies the final 
        	end of the range of values for subspacecraft azimuth in an image.
        	Note that since subspacecraft azimuth has values in [0,360], if 
        	the range in the image crosses the horizontal reference corresponding 
        	to zero, the value of minimum_subspacecraft_azimuth will be greater than 
        	the value of the maximum_subspacecraft_azimuth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subspacecraft_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>subspacecraft_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The subspacecraft_latitude attribute gives the value 
            of the planetocentric latitude at the subspacecraft point on the target.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_subspacecraft_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subspacecraft_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subspacecraft_latitude attribute identifies the value of
        	the subspacecraft latitude at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subspacecraft_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subspacecraft_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subspacecraft_latitude attribute identifies the value of
        	the subspacecraft latitude at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_subspacecraft_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subspacecraft_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subspacecraft_latitude attribute identifies the initial 
        	end of the range of values for subspacecraft latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subspacecraft_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subspacecraft_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subspacecraft_latitude attribute identifies the final 
        	end of the range of values for subspacecraft latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subspacecraft_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>subspacecraft_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The subspacecraft_longitude attribute gives the value 
            of the planetocentric longitude at the subspacecraft point on the target.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>start_subspacecraft_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subspacecraft_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subspacecraft_longitude attribute identifies the value of
        	the subspacecraft longitude at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subspacecraft_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subspacecraft_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subspacecraft_longitude attribute identifies the value of
        	the subspacecraft longitude at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_subspacecraft_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subspacecraft_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subspacecraft_longitude attribute identifies the initial 
        	end of the range of values for subspacecraft longitude.
        	Note that since subspacecraft longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_subspacecraft_longitude will be greater than the value of the 
        	maximum_subspacecraft_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subspacecraft_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subspacecraft_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subspacecraft_longitude attribute identifies the final 
        	end of the range of values for subspacecraft longitude in an image.
        	Note that since subspacecraft longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_subspacecraft_longitude will be greater than the value of the 
        	maximum_subspacecraft_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>lat_long_method</name>
        <version_id>1.0</version_id>
        <local_identifier>lat_long_method</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell Gordon</submitter_name>
        <definition>The lat_long_method is used with the attributes start_latitude, stop_latitude,
        	start_longitude and stop_longitude. For most observations these parameters would be multivalued. 
        	lat_long_method is used to characterize the start and stop latitude and longitude. The 
        	possible values are: 'center' indicating the latitude and longitude values are those at
        	the center of the field of view at the beginning and end of the observation. 'median' 
        	indicating the latitude and longitude values are the median values at the beginning and 
        	end of the observation. 'mean' indicating the latitude and longitude values are the mean
        	values at the beginning and end of the observation.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>true</enumeration_flag>
          <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
          <unit_of_measure_type>Units_of_None</unit_of_measure_type>
          <DD_Permissible_Value>
            <value>Center</value>
            <value_meaning>The latitude and longitude values given using start_ and stop_ latitude and longitude 
            	are those at the center of the field of view at the beginning and end of the observation.
            </value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Median</value>
            <value_meaning>The latitude and longitude values given using start_ and stop_ latitude and longitude 
            	are the median values at the beginning and end of the observation.
            </value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Mean</value>
            <value_meaning>The latitude and longitude values given using start_ and stop_ latitude and longitude
            	are the mean values at the beginning and end of the observation.
            </value_meaning>
          </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>start_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_latitude attribute identifies the value of
        	the Planetocentric latitude at the beginning of the observation 
        	(geometry_start_time_utc). When either start_latitude or stop_latitude 
        	is used, both must be used. In addition the attribute 
        	lat_long_method must be used.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_latitude attribute identifies the value of
        	the Planetocentric latitude at the end of the observation 
        	(geometry_stop_time_utc). When either start_latitude or stop_latitude 
        	is used, both must be used. In addition the attribute 
        	lat_long_method must be used.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_latitude attribute identifies the initial 
        	end of the range of values for Planetocentric latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_latitude attribute identifies the final 
        	end of the range of values for Planetocentric latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_longitude attribute identifies the value of
        	the Planetocentric longitude at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_longitude attribute identifies the value of
        	the Planetocentric longitude at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_longitude attribute identifies the initial 
        	end of the range of values for Planetocentric longitude.
        	Note that since Planetocentric longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_longitude will be greater than the value of the maximum_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_longitude attribute identifies the final 
        	end of the range of values for Planetocentric longitude in an image.
        	Note that since Planetocentric longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_longitude will be greater than the value of the maximum_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

<!-- Attributes for the camera model classes.   -->
    
    <DD_Attribute>
        <name>calibration_source_id</name>
        <version_id>1.0</version_id>
        <local_identifier>calibration_source_id</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The calibration_source_id is used to identify the source used
            in calibrating the instrument. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>c0</name>
        <version_id>1.0</version_id>
        <local_identifier>c0</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The first coefficient of a polynomial.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>c1</name>
        <version_id>1.0</version_id>
        <local_identifier>c1</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The second coefficient of a polynomial.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    <DD_Attribute>
        <name>c2</name>
        <version_id>1.0</version_id>
        <local_identifier>c2</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The third coefficient of a polynomial.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>device_id</name>
        <version_id>1.0</version_id>
        <local_identifier>device_id</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The device_id attribute specifies the abbreviated 
          identification of an articulation device.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>device_mode</name>
        <version_id>1.0</version_id>
        <local_identifier>device_mode</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The device_mode attribute specifies the deployment state
            (i.e., physical configuration) of an articulation device at the time of data
            acquisition. Examples include 'Arm Vibe', 'Deployed', 'Free Space', 'Stowed'.
            Note: the value set for this attribute is mission-specific and should be declared
            in a mission-specific dictionary.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>device_phase</name>
        <version_id>1.0</version_id>
        <local_identifier>device_phase</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The device_phase attribute specifies the current phase of the mission, 
          from an articulation-device-centric point of view.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>false</enumeration_flag>
          <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>device_name</name>
        <version_id>1.0</version_id>
        <local_identifier>device_name</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The device_name attribute specifies the common 
          name of an articulation device.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>selected_instrument_id</name>
        <version_id>1.0</version_id>
        <local_identifier>selected_instrument_id</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The selected_instrument_id attribute specifies an abbreviated name or acronym 
        	that identifies the selected instrument mounted on the articulation device.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>false</enumeration_flag>
          <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>model_type</name>
        <version_id>1.0</version_id>
        <local_identifier>model_type</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The model_type attribute specifies an identifier for the 
            type or kind of model. The value should be one of a well defined set, 
            providing an application program with sufficient information to know 
            how to handle the rest of the parameters within the model. This 
            value will correlate directly with the specific camera model class 
            that is a subclass of the Camera_Model_Parameters class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>CAHV</value>
                <value_meaning>The CAHV model is a linear, perspective-projection camera model
                    (equivalent to a pinhole camera).</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>CAHVOR</value>
                <value_meaning>The CAHVOR model is built upon CAHV (see CAHV_Model), adding
                    radial (barrel or pincushion) distortion to the linear model.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>CAHVORE</value>
                <value_meaning>The CAHVORE model is built upon CAHVOR (see CAHVOR_Model),
                    adding support for fisheye lenses.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>PSPH</value>
                <value_meaning>The PSPH model is designed to perform better fisheye-image
                    rectification prior to 1D stereo correlation.</value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>solution_id</name>
        <version_id>1.0</version_id>
        <local_identifier>solution_id</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The solution_id attribute specifies the unique identifier 
          for the solution set to which the values in the group belong. For 
          certain kinds of information, such as pointing correction (pointing 
          models) and rover localization (coordinate system definitions), the 
          "true" value is unknown and only estimates of the true value exist. 
          Thus, more than one set of estimates may exist simultaneously, each 
          valid for its intended purpose. Each of these sets is called a 
          "solution" to the unknown true value. The solution_id attribute is 
          used to identify which solution is being expressed by the containing 
          group. No specific naming convention is defined here, however it is 
          recommended that projects adopt one. The intent is to be able to 
          identify who created the solution, and why. Possible components of 
          the naming convention include user, institution, purpose, request ID, 
          version, program, date/time. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>interpolation_algorithm</name>
        <version_id>1.0</version_id>
        <local_identifier>interpolation_algorithm</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>The interpolation_algorithm defines how interpolation was performed. For example,
            "Piecewise Bilinear" does a piecewise bilinear interpolation between calibration models
            nearest to the interpolation_value.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>interpolation_variable</name>
        <version_id>1.0</version_id>
        <local_identifier>interpolation_variable</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>The interpolation_variable defines the parameter across which interpolation is 
            being performed. Examples of variables include Focus, Zoom, and Temperature.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>interpolation_value</name>
        <version_id>1.0</version_id>
        <local_identifier>interpolation_value</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>The interpolation_value specifies the value of the variable to which the model was
            interpolated. The interpretation of the value depends on what the variable is and should
            be documented in the mission documentation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>interpolation_sequence</name>
        <version_id>1.0</version_id>
        <local_identifier>interpolation_sequence</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>When more than one dimension is interpolated, interpolation_sequence define the
            ordering. Sequence value 1 was interpolated first, directly from calibration; sequence value 2
            was interpolated from those results, etc.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Integer</value_data_type>
            <minimum_value>0</minimum_value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>psph_model_scale_x</name>
        <version_id>1.0</version_id>
        <local_identifier>psph_model_scale_x</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Column scale factor to convert between x coordinate and 
            rotation around axis x, expressed in radians/pixel.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>psph_model_scale_y</name>
        <version_id>1.0</version_id>
        <local_identifier>psph_model_scale_y</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Column scale factor to convert between y coordinate and 
            rotation around axis y, expressed in radians/pixel.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
        
<!-- Attributes for indexed list classes.   -->
    
    <DD_Attribute>
        <name>coordinate_space_frame_type</name>
        <version_id>1.1</version_id>
        <local_identifier>coordinate_space_frame_type</local_identifier>
        <nillable_flag>true</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The coordinate_space_frame_type attribute identifies the type of frame being
            described, such as SITE, LOCAL_LEVEL, LANDER, ROVER, ARM, etc. When combined with
            Coordinate_Space_Index and the optional solution_id in the Coordinate_Space_Indexed class,
            this serves to fully name an instance of a coordinate space. 
        </definition>
        
<!-- PDS3 styled names  -->

        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
             <value>APXS_Frame</value>
             <value_meaning>Frame defining the APXS instrument on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_CUSTOM_TCP_FRAME</value>
             <value_meaning>Frame describing a user-defined Tool Control Point for a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_DOCKING_POST_FRAME</value>
             <value_meaning>Frame describing the docking post on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_DRILL_FRAME</value>
             <value_meaning>Frame describing the drill on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_DRT_FRAME</value>
             <value_meaning>Frame describing the Dust Removal Tool on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_FCS_FRAME</value>
             <value_meaning>Frame describing the FCS (Facility Contact Switch) device on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_FRAME</value>
             <value_meaning>Frame describing a defined portion of a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_GDRT_FRAME</value>
             <value_meaning>Frame describing the GDRT (Gaseous Dust Removal Tool) device on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_MAHLI_FRAME</value>
             <value_meaning>Frame describing the MAHLI instrument on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_PIXL_FRAME</value>
             <value_meaning>Frame describing the PIXL instrument on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_PORTION_FRAME</value>
             <value_meaning>Frame describing the sample portioner device on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_SCOOP_TCP_FRAME</value>
             <value_meaning>Frame describing the Tool Control Point for the scoop on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_SCOOP_TIP_FRAME</value>
             <value_meaning>Frame describing the tip of a scoop on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_SHERLOC_FRAME</value>
             <value_meaning>Frame describing the SHERLOC instrument on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_TURRET_FRAME</value>
             <value_meaning>Frame describing the turret on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ARM_WATSON_FRAME</value>
             <value_meaning>Frame describing the Watson instrument component on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>CINT_FRAME</value>
             <value_meaning>Frame describing the LVS camera during descent.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>DRILL_BIT_TIP</value>
             <value_meaning>Frame centered on the tip of the drill.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>HELI_G_FRAME</value>
             <value_meaning>Helicopter frame defined attached to the ground at takeoff.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>HELI_M_FRAME</value>
             <value_meaning>Helicopter frame roughly analogous to ROVER_MECH_FRAME.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>HELI_S1_FRAME</value>
             <value_meaning>Helicopter frame roughly analogous to ROVER_NAV_FRAME defined for IMU #1.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>HELI_S2_FRAME</value>
             <value_meaning>Helicopter frame roughly analogous to ROVER_NAV_FRAME defined for IMU #2.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>LANDER_FRAME</value>
             <value_meaning>Analogous to ROVER_NAV_FRAME for non-mobile missions.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>LOCAL_LEVEL_FRAME</value>
             <value_meaning>Frame coincident with ROVER_NAV/LANDER_FRAME that is oriented according to cartographic directions and gravity.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>MCMF_FRAME</value>
             <value_meaning>Mars Centered Mars Fixed Frame defined with origin at the planet center.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>MCZ_CAL_PRIMARY</value>
             <value_meaning>Primary Mastcam-Z calibration target.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
                <value>MEDA_RDS</value>
                <value_meaning>Radiation and Dust Sensor for the MEDA instruments.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
                <value>ORBITAL</value>
                <value_meaning>A surface frame for use with orbital images, where the origin is defined
                    relative to the equator and prime meridan or another orbital frame.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>PIXL_BASE_FRAME</value>
             <value_meaning>Frame describing the base of the PIXL instrument.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>PIXL_SENSOR_FRAME</value>
             <value_meaning>Frame describing the movable sensor head of the PIXL instrument.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>PIXL_TOOL</value>
             <value_meaning>Frame for PIXL instrument.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>ROVER_FRAME</value>
             <value_meaning>Frame that is attached to the rover and moves with the rover (in both position and orientation). Often synonymous with ROVER_NAV_FRAME.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>ROVER_MECH_FRAME</value>
             <value_meaning>Frame generally similar to ROVER_NAV_FRAME  but with different origin and possibly axis orientation that is more conducive to mechanical operations ("MECH" for "Mechanical").  The origin is typically (but not necessarily) tied to a specific bit of hardware.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>ROVER_NAV_FRAME</value>
             <value_meaning>Frame attached to the rover oriented with respect to the rover that moves with the rover ("NAV" for "Navigation").  The origin is generally in a location conducive to navigation (e.g. at the center of turning between the middle wheels at nominal ground level on MSL/M20 type rovers) which may not be attached to any physical hardware.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>RSM_FRAME</value>
             <value_meaning>Frame defining a Remote Sensing Mast.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>RSM_HEAD_FRAME</value>
             <value_meaning>Frame defining a Remote Sensing Mast.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>SITE_FRAME</value>
             <value_meaning>Instance of LOCAL_LEVEL_FRAME that is fixed to the ground. Used for local operations to reduce error propagation due to position uncertainty.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>SUN</value>
             <value_meaning>Frame centered on the sun. Generally used for pointing instruments at the sun,
                    rather than 3D position.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>TOOL_FRAME</value>
             <value_meaning>Tool frame is used to indicate the frame associated with the currently selected (or activated) "tool", in contexts where the specific frame is unknown or does not matter.  "Tools" are typically devices on an arm such as a drill, microscopic imager, contact spectrometer, etc.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>TURRET_FRAME</value>
             <value_meaning>Frame based on a turret mechanism.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>WHEEL_RF</value>
             <value_meaning>Frame for right front wheel.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>WHEEL_LF</value>
             <value_meaning>Frame for left front wheel.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>WHEEL_RR</value>
             <value_meaning>Frame for right rear wheel.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>WHEEL_LR</value>
             <value_meaning>Frame for left rear wheel.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>WHEEL_RM</value>
             <value_meaning>Frame for right middle wheel.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>WHEEL_LM</value>
             <value_meaning>Frame for left middle wheel.</value_meaning>
            </DD_Permissible_Value>

            <!-- Title case value names  -->
            <DD_Permissible_Value>
                <value>AEGIS_1</value>
                <value_meaning>AEGIS target number 1. AEGIS is a component of rover software
                    that selects targets for further investigation based on user defined
                    parameters.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
                <value>AEGIS_2</value>
                <value_meaning>AEGIS target number 2. AEGIS is a component of rover software
                    that selects targets for further investigation based on user defined
                    parameters.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
                <value>AEGIS_3</value>
                <value_meaning>AEGIS target number 3. AEGIS is a component of rover software
                    that selects targets for further investigation based on user defined
                    parameters.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
                <value>AEGIS_4</value>
                <value_meaning>AEGIS target number 4. AEGIS is a component of rover software
                    that selects targets for further investigation based on user defined
                    parameters.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
                <value>AEGIS_5</value>
                <value_meaning>AEGIS target number 5. AEGIS is a component of rover software
                    that selects targets for further investigation based on user defined
                    parameters.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>APXS_Frame</value>
             <value_meaning>Frame defining the APXS instrument on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_Custom_TCP_Frame</value>
             <value_meaning>Frame describing a user-defined Tool Control Point for a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_Docking_Post_Frame</value>
             <value_meaning>Frame describing the docking post on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_Drill_Frame</value>
             <value_meaning>Frame describing the drill on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_DRT_Frame</value>
             <value_meaning>Frame describing the Dust Removal Tool on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_FCS_Frame</value>
             <value_meaning>Frame describing the FCS (Facility Contact Switch) device on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_Frame</value>
             <value_meaning>Frame describing a defined portion of a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_GDRT_Frame</value>
             <value_meaning>Frame describing the GDRT (Gaseous Dust Removal Tool) device on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_MAHLI_Frame</value>
             <value_meaning>Frame describing the MAHLI instrument on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_PIXL_Frame</value>
             <value_meaning>Frame describing the PIXL instrument on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_Portion_Frame</value>
             <value_meaning>Frame describing the sample portioner device on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_Scoop_TCP_Frame</value>
             <value_meaning>Frame describing the Tool Control Point for the scoop on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_Scoop_TIP_Frame</value>
             <value_meaning>Frame describing the tip of a scoop on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_SHERLOC_Frame</value>
             <value_meaning>Frame describing the SHERLOC instrument on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_Turret_Frame</value>
             <value_meaning>Frame describing the turret on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Arm_WATSON_Frame</value>
             <value_meaning>Frame describing the Watson instrument component on a movable arm.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>CINT_Frame</value>
             <value_meaning>Frame describing the LVS camera during descent.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Heli_G_Frame</value>
             <value_meaning>Helicopter frame defined attached to the ground at takeoff.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Heli_M_Frame</value>
             <value_meaning>Helicopter frame roughly analogous to ROVER_MECH_FRAME.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Heli_S1_Frame</value>
             <value_meaning>Helicopter frame roughly analogous to ROVER_NAV_FRAME defined for IMU #1.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Heli_S2_Frame</value>
             <value_meaning>Helicopter frame roughly analogous to ROVER_NAV_FRAME defined for IMU #2.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Lander_Frame</value>
             <value_meaning>Analogous to ROVER_NAV_FRAME for non-mobile missions.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Local_Level_Frame</value>
             <value_meaning>Frame coincident with ROVER_NAV/LANDER_FRAME that is oriented according to cartographic directions and gravity.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Mast_Frame</value>
             <value_meaning>TBD</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>MB_Frame</value>
             <value_meaning>TBD</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>MCMF_Frame</value>
             <value_meaning>Mars Centered Mars Fixed Frame defined with origin at the planet center.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>MI_Frame</value>
             <value_meaning>TBD</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
                <value>Orbital</value>
                <value_meaning>A surface frame for use with orbital images, where the origin is defined
                    relative to the equator and prime meridan or another orbital frame.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>PIXL_Base_Frame</value>
             <value_meaning>Frame describing the base of the PIXL instrument.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>PIXL_Sensor_Frame</value>
             <value_meaning>Frame describing the movable sensor head of the PIXL instrument.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>PIXL_Tool</value>
             <value_meaning>Frame for PIXL instrument.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Rat_Frame</value>
             <value_meaning>TBD</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Rover_Frame</value>
             <value_meaning>TBD</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Rover_Mech_Frame</value>
             <value_meaning>Frame generally similar to ROVER_NAV_FRAME  but with different origin and possibly axis orientation that is more conducive to mechanical operations ("MECH" for "Mechanical").  The origin is typically (but not necessarily) tied to a specific bit of hardware.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Rover_Nav_Frame</value>
             <value_meaning>Frame attached to the rover oriented with respect to the rover that moves with the rover ("NAV" for "Navigation").  The origin is generally in a location conducive to navigation (e.g. at the center of turning between the middle wheels at nominal ground level on MSL/M20 type rovers) which may not be attached to any physical hardware.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>RSM_Frame</value>
             <value_meaning>Frame defining a Remote Sensing Mast.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>RSM_Head_Frame</value>
             <value_meaning>Frame defining a Remote Sensing Mast.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Site_Frame</value>
             <value_meaning>Instance of LOCAL_LEVEL_FRAME that is fixed to the ground. Used for local operations to reduce error propagation due to position uncertainty.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>Tool_Frame</value>
             <value_meaning>Tool frame is used to indicate the frame associated with the currently selected (or activated) "tool", in contexts where the specific frame is unknown or does not matter.  "Tools" are typically devices on an arm such as a drill, microscopic imager, contact spectrometer, etc.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>Turret_Frame</value>
             <value_meaning>Frame based on a turret mechanism.</value_meaning>
            </DD_Permissible_Value>

            <DD_Permissible_Value>
             <value>Wheel_RF</value>
             <value_meaning>Frame for right front wheel.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Wheel_LF</value>
             <value_meaning>Frame for left front wheel.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Wheel_RR</value>
             <value_meaning>Frame for right rear wheel.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Wheel_LR</value>
             <value_meaning>Frame for left rear wheel.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Wheel_RM</value>
             <value_meaning>Frame for right middle wheel.</value_meaning>
            </DD_Permissible_Value>
            
            <DD_Permissible_Value>
             <value>Wheel_LM</value>
             <value_meaning>Frame for left middle wheel.</value_meaning>
            </DD_Permissible_Value>

        </DD_Value_Domain>

    </DD_Attribute>
    
    <DD_Attribute>
        <name>index_sequence_number</name>
        <version_id>1.0</version_id>
        <local_identifier>index_sequence_number</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The index_sequence_number attribute supplies the sequence 
          identifier for the associated value in a group of related values. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>index_name</name>
        <version_id>1.0</version_id>
        <local_identifier>index_name</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The index_name attribute supplies the formal name 
          for the associated value in a group of related values. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>index_id</name>
        <version_id>1.0</version_id>
        <local_identifier>index_id</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The index_id attribute supplies a short name (identifier) 
          for the associated value in a group of related values. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
        
    <DD_Attribute>
        <name>index_value_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>index_value_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The index_value_angle attribute provides the value 
          of an angle as named by the associated index_id, index_name, 
          or index_sequence_number. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>index_value_length</name>
        <version_id>1.0</version_id>
        <local_identifier>index_value_length</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The index_value_length attribute provides the value 
          of a length as named by the associated index_id or index_name. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>index_value_number</name>
        <version_id>1.0</version_id>
        <local_identifier>index_value_number</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The index_value_number attribute provides the value with 
          no applicable units as named by the associated index_id or index_name. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_None</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>index_value_string</name>
        <version_id>1.0</version_id>
        <local_identifier>index_value_string</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The index_value attribute provides the string value as 
          named by the associated index_id or index_name. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>index_value_temperature</name>
        <version_id>1.0</version_id>
        <local_identifier>index_value_temperature</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The index_value_temperature attribute provides the value 
          of a temperature as named by the associated index_id or index_name. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Temperature</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
<!-- Attributes for the Coordinate_Space_Definition class.   -->

    <DD_Attribute>
        <name>positive_azimuth_direction</name>
        <version_id>1.0</version_id>
        <local_identifier>positive_azimuth_direction</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The positive_azimuth_direction attribute specifies the direction in which
            azimuth is measured in positive degrees for an observer on the surface of a body.
            The azimuth is measured with respect to the elevation reference plane. A value of
            'clockwise' indicates that azimuth is measured positively clockwise, and
            'counterclockwise' indicates that azimuth increases positively counter-clockwise.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>true</enumeration_flag>
          <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
          <unit_of_measure_type>Units_of_None</unit_of_measure_type>
          <DD_Permissible_Value>
            <value>Clockwise</value>
            <value_meaning>Indicates that azimuth is measured positively Clockwise.</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Counterclockwise</value>
            <value_meaning>Indicates that azimuth is measured positively Counter-clockwise.</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>CW</value>
            <value_meaning>Indicates that azimuth is measured positively Clockwise.</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>CCW</value>
            <value_meaning>Indicates that azimuth is measured positively Counter-clockwise.</value_meaning>
          </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>positive_elevation_direction</name>
        <version_id>1.0</version_id>
        <local_identifier>positive_elevation_direction</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The positive_elevation_direction attribute provides the direction in which elevation is 
          measured in positive degrees for an observer on the surface of a body. The elevation is measured 
          with respect to the azimuthal reference plane. A value of UP or ZENITH indicates that elevation is 
          measured positively upwards, i.e., the zenith point would be at +90 degrees and the nadir point at 
          -90 degrees. DOWN or NADIR indicates that the elevation is measured positively downwards; the 
          zenith point would be at -90 degrees and the nadir point at +90 degrees.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>true</enumeration_flag>
          <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
          <unit_of_measure_type>Units_of_None</unit_of_measure_type>
          <DD_Permissible_Value>
            <value>Up</value>
            <value_meaning>Indicates that elevation is measured positively upwards, i.e., the zenith point would
              be at +90 degrees and the nadir point at -90 degrees.</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Zenith</value>
            <value_meaning>Indicates that elevation is measured positively upwards, i.e., the zenith point would
              be at +90 degrees and the nadir point at -90 degrees.</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Down</value>
            <value_meaning>Indicates that the elevation is measured positively downwards, i.e. the 
              zenith point would be at -90 degrees and the nadir point at +90 degrees.</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Nadir</value>
            <value_meaning>Indicates that the elevation is measured positively downwards, i.e. the 
              zenith point would be at -90 degrees and the nadir point at +90 degrees.</value_meaning>
          </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

<!-- Attributes for the illumination classes.   -->

    <DD_Attribute>
        <name>emission_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>emission_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The emission_angle element provides the value of the angle between the surface
            normal vector at the intercept point and a vector from the intercept point to the
            spacecraft. The emission_angle varies from 0 degrees when the spacecraft is viewing the
            subspacecraft point (nadir viewing) to 90 degrees when the intercept is tangent to the
            surface of the target body. Thus, higher values of emission_angle indicate more oblique
            viewing of the target. Values in the range of 90 to 180 degrees are possible for ring data.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_emission_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_emission_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_emission_angle attribute provides the smallest 
            value during the observation for the emission angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_emission_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_emission_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_emission_angle element provides the largest 
            value during the observation for the emission angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_emission_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>start_emission_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_emission_angle attribute provides the value 
            at the beginning of the observation (geometry_start_time_utc) for 
            the emission angle at the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_emission_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_emission_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_emission_angle attribute provides the value 
            at the end of the observation (geometry_stop_time_utc) for 
            the emission angle at the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>incidence_angle</name>
        <version_id>2.0</version_id>
        <local_identifier>incidence_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The incidence_angle element provides a measure of the lighting condition at
            the intercept point. Incidence angle is the angle between the local vertical at the
            intercept point (surface) and a vector from the intercept point to the sun. The incidence_angle
            varies from 0 degrees when the intercept point coincides with the subsolar point to 90 degrees
            when the intercept point is at the terminator (i.e., in the shadowed or dark portion of
            the target body).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_incidence_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_incidence_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_incidence_angle attribute provides the smallest 
            value during the observation for the incidence angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_incidence_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_incidence_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_incidence_angle element provides the largest 
            value during the observation for the incidence angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_incidence_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>start_incidence_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_incidence_angle attribute provides the value 
            at the beginning of the observation (geometry_start_time_utc) for 
            the incidence angle at the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_incidence_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_incidence_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_incidence_angle attribute provides the value 
            at the end of the observation (geometry_stop_time_utc) for 
            the incidence angle at the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>phase_angle</name>
        <version_id>2.0</version_id>
        <local_identifier>phase_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The phase_angle element provides a measure of the relationship between 
            the instrument viewing position and incident illumination (such as solar 
            light). Phase angle is measured at the target; it is the angle between 
            a vector to the illumination source and a vector to the instrument. If 
            illumination is from behind the instrument, phase_angle will be small.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_phase_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_phase_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_phase_angle attribute provides the smallest 
            value during the observation for the phase angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_phase_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_phase_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_phase_angle element provides the largest 
            value during the observation for the phase angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_phase_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>start_phase_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_phase_angle attribute provides the value 
            at the beginning of the observation (geometry_start_time_utc) for 
            the phase angle at the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_phase_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_phase_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_phase_angle attribute provides the value 
            at the end of the observation (geometry_stop_time_utc) for 
            the phase angle at the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>solar_elongation</name>
        <version_id>1.0</version_id>
        <local_identifier>solar_elongation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The solar_elongation element gives the angle between the 
           line of sight of observation and the direction of the Sun. 
           Note: For IRAS: The line of sight of observation is the 
           boresight of the telescope as measured by the satellite sun sensor. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_solar_elongation</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_solar_elongation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_solar_elongation attribute provides the smallest 
            value during the observation for the solar elongation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_solar_elongation</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_solar_elongation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_solar_elongation element provides the largest 
            value during the observation for the solar elongation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_solar_elongation</name>
        <version_id>1.0</version_id>
        <local_identifier>start_solar_elongation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_solar_elongation attribute provides the value 
            at the beginning of the observation (geometry_start_time_utc) for 
            the solar elongation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_solar_elongation</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_solar_elongation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_solar_elongation attribute provides the value 
            at the end of the observation (geometry_stop_time_utc) for 
            the solar elongation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

<!-- Attributes for the Distances_Specific class.   -->

    <DD_Attribute>
        <name>distance</name>
        <version_id>1.0</version_id>
        <local_identifier>distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The distance attribute provides the scalar distance 
                    between to objects or points.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>target_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>target_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The target_geocentric_distance attribute provides the scalar distance
            between the center of the target and the center of the Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_target_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_target_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_target_geocentric_distance attribute provides 
            the smallest value for the distance between the center of the 
            target and the center of the Earth during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_target_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_target_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_target_geocentric_distance attribute provides 
            the largest value for the distance between the center of the 
            target and the center of the Earth during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_target_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_target_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_target_geocentric_distance attribute provides 
            the scalar distance between the center of the target and the center of 
            the Earth at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_target_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_target_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_target_geocentric_distance attribute provides 
            the scalar distance between the center of the target and the center of 
            the Earth at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>target_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>target_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The target_heliocentric_distance attribute provides 
            the scalar distance between the center of the target and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_target_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_target_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_target_heliocentric_distance attribute provides 
            the smallest value for the distance between the center of the 
            target and the center of the Sun during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_target_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_target_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_target_heliocentric_distance attribute provides 
            the largest value for the distance between the center of the 
            target and the center of the Sun during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_target_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_target_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_target_heliocentric_distance attribute provides 
            the scalar distance between the center of the target and the center of 
            the Sun at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_target_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_target_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_target_heliocentric_distance attribute provides 
            the scalar distance between the center of the target and the center of 
            the Sun at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>target_ssb_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>target_ssb_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The target_ssb_distance attribute provides the scalar distance between
            the center of the target and the Solar System Barycenter.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>minimum_target_ssb_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_target_ssb_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_target_ssb_distance attribute provides 
            the smallest value for the distance between the center of the 
            target and the Solar System Barycenter during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_target_ssb_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_target_ssb_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_target_ssb_distance attribute provides 
            the largest value for the distance between the center of the 
            target and the Solar System Barycenter during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_target_ssb_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_target_ssb_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_target_ssb_distance attribute provides 
            the scalar distance between the center of the target and the 
            Solar System Barycenter at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_target_ssb_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_target_ssb_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_target_ssb_distance attribute provides 
            the scalar distance between the center of the target and the 
            Solar System Barycenter at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_target_center_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_target_center_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_target_center_distance attribute provides 
            the scalar distance between the spacecraft and the center 
            of the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_target_center_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_target_center_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_target_center_distance attribute provides 
            the smallest value during the observation for the distance between the spacecraft 
            and the center of the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_target_center_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_target_center_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_target_center_distance attribute provides 
            the largest value during the observation for the distance between the spacecraft 
            and the center of the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_target_center_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_target_center_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_target_center_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the center of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_target_center_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_target_center_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_target_center_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the center of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_target_boresight_intercept_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_target_boresight_intercept_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_target_boresight_intercept_distance attribute provides 
            the scalar distance between the spacecraft and the boresight vector 
            intercept point on the surface of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_target_boresight_intercept_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_target_boresight_intercept_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_target_boresight_intercept_distance attribute provides 
            the smallest value during the observation for the distance between the spacecraft and
            the boresight vector intercept point on the surface of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_target_boresight_intercept_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_target_boresight_intercept_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_target_boresight_intercept_distance attribute provides 
            the largest value during the observation for the distance between the spacecraft and
            the boresight vector intercept point on the surface of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_target_boresight_intercept_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_target_boresight_intercept_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_target_boresight_intercept_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the boresight vector intercept point on the surface of 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_target_boresight_intercept_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_target_boresight_intercept_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_target_boresight_intercept_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the boresight vector intercept point on the surface of 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_target_subspacecraft_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_target_subspacecraft_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_target_subspacecraft_distance attribute provides 
            the scalar distance between the spacecraft and the subspacecraft point on the 
            surface of the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_target_subspacecraft_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_target_subspacecraft_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_target_subspacecraft_distance attribute provides 
            the smallest value during the observation for the distance between the spacecraft and 
            the subspacecraft point on the surface of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_target_subspacecraft_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_target_subspacecraft_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_target_subspacecraft_distance attribute provides 
            the largest value during the observation for the distance between the spacecraft and 
            the subspacecraft point on the surface of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_target_subspacecraft_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_target_subspacecraft_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_target_subspacecraft_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the subspacecraft point on the surface of 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_target_subspacecraft_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_target_subspacecraft_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_target_subspacecraft_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the subspacecraft point on the surface of 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_central_body_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_central_body_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_central_body_distance attribute provides the scalar distance
            between the spacecraft and the center of the central body (e.g., the center of Mars
            when opperating in the Mars system).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_central_body_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_central_body_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_central_body_distance attribute provides 
            the smallest value during the observation for the distance between the spacecraft and 
            the center of the central body (e.g., the center of Mars when opperating in the 
            Mars system).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_central_body_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_central_body_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_central_body_distance attribute provides 
            the largest value during the observation for the distance between the spacecraft and 
            the center of the central body (e.g., the center of Mars when opperating in the 
            Mars system).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_central_body_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_central_body_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_central_body_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the center of the central body (e.g., the center 
            of Mars when opperating in the Mars system).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_central_body_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_central_body_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_central_body_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the center of the central body (e.g., the center 
            of Mars when opperating in the Mars system).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_geocentric_distance attribute provides 
                    the scalar distance between the spacecraft and the center of Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_geocentric_distance attribute provides 
            the smallest value during the observation for the distance between the spacecraft and 
            the center of Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_geocentric_distance attribute provides 
            the largest value during the observation for the distance between the spacecraft and 
            the center of Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_geocentric_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the center of Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_geocentric_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the center of Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_heliocentric_distance attribute provides the
            scalar distance between the spacecraft and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>    

    <DD_Attribute>
        <name>minimum_spacecraft_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_heliocentric_distance attribute provides 
            the smallest value during the observation for the distance between the 
            spacecraft and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_heliocentric_distance attribute provides 
            the largest value during the observation for the distance between the 
            spacecraft and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_heliocentric_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_heliocentric_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

<!-- Attributes for the vector classes -->
  
    <DD_Attribute>
        <name>light_time_correction_applied</name>
        <version_id>1.0</version_id>
        <local_identifier>light_time_correction_applied</local_identifier>
        <nillable_flag>true</nillable_flag>
        <submitter_name>Boris Semenov</submitter_name>
        <definition>The light_time_correction_applied indicates whether or not light travel time
            correction and stellar aberration correction were used when calculating the values
            in the enclosing class. The attribute is nillable with nill_reason = unknown, but only
            for migrated data. Note: generally, received light travel time is calculated unless
            a transmitter (e.g., radar, radio) was involved in which the calculation typically is
            transmitted light time.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>None</value>
                <value_meaning>Neither light travel time nor stellar aberration was used when 
                  calculating the values in the enclosing class.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Received_Light_Time</value>
                <value_meaning>Received light travel time, but not stellar aberration was used 
                  when calculating the values in the enclosing class.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Received_Light_Time_Stellar_Abb</value>
                <value_meaning>Received light travel time and stellar aberration were used 
                  when calculating the values in the enclosing class.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Transmitted_Light_Time</value>
                <value_meaning>Transmitted light travel time, but not stellar aberration was used 
                  when calculating the values in the enclosing class.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Transmitted_Light_Time_Stellar_Abb</value>
                <value_meaning>Transmitted light travel time and stellar aberration were used 
                  when calculating the values in the enclosing class.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

<!-- Components for Cartesian vectors -->

    <DD_Attribute>
        <name>x_position</name>
        <version_id>1.0</version_id>
        <local_identifier>x_position</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The x component of a Cartesian position vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    <DD_Attribute>
        <name>y_position</name>
        <version_id>1.0</version_id>
        <local_identifier>y_position</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The y component of a Cartesian position vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    <DD_Attribute>
        <name>z_position</name>
        <version_id>1.0</version_id>
        <local_identifier>z_position</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The z component of a Cartesian position vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>x_velocity</name>
        <version_id>1.0</version_id>
        <local_identifier>x_velocity</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The x component of a Cartesian velocity vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Velocity</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>y_velocity</name>
        <version_id>1.0</version_id>
        <local_identifier>y_velocity</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The y component of a Cartesian velocity vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Velocity</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>z_velocity</name>
        <version_id>1.0</version_id>
        <local_identifier>z_velocity</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The z component of a Cartesian velocity vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Velocity</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>x_acceleration</name>
        <version_id>1.0</version_id>
        <local_identifier>x_acceleration</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The x component of a Cartesian acceleration vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Acceleration</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>y_acceleration</name>
        <version_id>1.0</version_id>
        <local_identifier>y_acceleration</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The y component of a Cartesian acceleration vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Acceleration</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>z_acceleration</name>
        <version_id>1.0</version_id>
        <local_identifier>z_acceleration</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The z component of a Cartesian acceleration vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Acceleration</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>x_pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>x_pixel</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The x component of a Cartesian pixel vector; typically used 
            in cameral models.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>y_pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>y_pixel</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The y component of a Cartesian pixel vector; typically used 
            in cameral models.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>z_pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>z_pixel</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The z component of a Cartesian pixel vector; typically used 
            in cameral models.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>x</name>
        <version_id>1.0</version_id>
        <local_identifier>x</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The x component of a Cartesian vector which has no units.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>y</name>
        <version_id>1.0</version_id>
        <local_identifier>y</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The y component of a Cartesian vector which has no units.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>z</name>
        <version_id>1.0</version_id>
        <local_identifier>z</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The z component of a Cartesian vector which has no units.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>x_unit</name>
        <version_id>1.0</version_id>
        <local_identifier>x_unit</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The x component of a unit Cartesian vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-1</minimum_value>
            <maximum_value>1</maximum_value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>y_unit</name>
        <version_id>1.0</version_id>
        <local_identifier>y_unit</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The y component of a unit Cartesian vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-1</minimum_value>
            <maximum_value>1</maximum_value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>z_unit</name>
        <version_id>1.0</version_id>
        <local_identifier>z_unit</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The z component of a unit Cartesian vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-1</minimum_value>
            <maximum_value>1</maximum_value>
        </DD_Value_Domain>
    </DD_Attribute>
    
<!-- Components for Planetocentric vectors  -->

    <DD_Attribute>
        <name>radius_position</name>
        <version_id>1.0</version_id>
        <local_identifier>radius_position</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The radial component of a spherical or cylindrical position vector
                    (e.g., the radius coordinate in Planetocentric coordinates).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>longitude_position</name>
        <version_id>1.0</version_id>
        <local_identifier>longitude_position</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The longitudinal component of a Planetocentric position vector. 
                    Planetocentric longitude is measured from the IAU approved prime 
                    meridian for the body and increases toward the east.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>latitude_position</name>
        <version_id>1.0</version_id>
        <local_identifier>latitude_position</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The latitude component of a Planetocentric position vector. Planetocentric
            latitude is the angle between the equator plane and a vector connecting the
            point of interest and the origin of the coordinate system. Latitudes are defined
            to be positive in the northern (as defined by the IAU) hemisphere.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>radial_velocity</name>
        <version_id>1.0</version_id>
        <local_identifier>radial_velocity</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The radial component of a spherical or cylindrical velocity vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Velocity</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>longitude_velocity</name>
        <version_id>1.0</version_id>
        <local_identifier>longitude_velocity</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The longitudinal component of a Planetocentric velocity vector.  
                    Planetocentric longitude is measured from the IAU approved prime 
                    meridian for the body and increases toward the east.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Angular_Velocity</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>latitude_velocity</name>
        <version_id>1.0</version_id>
        <local_identifier>latitude_velocity</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The latitude component of a Planetocentric velocity vector. Planetocentric
            latitude is the angle between the equator plane and a vector connecting the point
            of interest and the origin of the coordinate system. Latitudes are defined to be
            positive in the northern (as defined by the IAU) hemisphere.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Angular_Velocity</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

<!-- Components for CAHVORETP Components -->

    <DD_Attribute>
        <name>cahvore_model_type</name>
        <version_id>1.0</version_id>
        <local_identifier>cahvore_model_type</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The cahvore_model_type attribute indicates which variant of the CAHVORE model to
          use. Type 1 is a perspective-projection model, similar to CAHV and CAHVOR except for the
          moving entrance pupil. Type 2 is a fish-eye lens model reflecting fundamentally
          different geometry. Type 3 is a generalization that includes the first two, and is used for most
          fisheye-type lenses (see cahvore_model_parameter).
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>true</enumeration_flag>
          <value_data_type>ASCII_Integer</value_data_type>
          <unit_of_measure_type>Units_of_None</unit_of_measure_type>
          <DD_Permissible_Value>
            <value>1</value>
            <value_meaning>A perspective-projection model, similar to CAHV and
              CAHVOR except for the moving entrance pupil</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>2</value>
            <value_meaning>A fish-eye lens model reflecting fundamentally different geometry</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>3</value>
            <value_meaning>A generalization that includes the first two, and is used for most
              fisheye-type lenses</value_meaning>
          </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>cahvore_model_parameter</name>
        <version_id>1.0</version_id>
        <local_identifier>cahvore_model_parameter</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The cahvore_parameter_type attribute is a scalar floating-point number used for
            CAHVORE Type 3 models (see cahvore_model_type). If the parameter is 1.0, the model is
            identical to type 1; if 0.0, it is identical to type 2. Most fish-eye lenses use a value
            in between.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>false</enumeration_flag>
          <value_data_type>ASCII_Real</value_data_type>
          <unit_of_measure_type>Units_of_None</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

<!-- Attributes for Derived_Geometry classes -->
    
    <DD_Attribute>
        <name>target_name</name>
        <version_id>1.0</version_id>
        <local_identifier>target_name</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>Specifies the name of the target location for items in this class.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>solar_image_clock_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>solar_image_clock_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>Describes the direction of the sun in terms of 
            the image plane, defined as a clock angle (clockwise) around the center 
            of the image with 0 pointing to the top of the image, with respect to 
            the display orientation (usually defined by disp:vertical_display_direction).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>instrument_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>instrument_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The instrument_azimuth attribute specifies the value for an instrument's
            rotation in the horizontal direction. It may be measured from a low hard stop,
            or relative to a coordinate frame. Although it may be used for any instrument
            where it makes sense, it is primarily intended for use in surface-based instruments
            that measure pointing in terms of azimuth and elevation. If this value is expressed
            using a coordinate system, the coordinate system is specified by the
            Coordinate_Space_Reference class. The interpretation of exactly what part of
            the instrument is being pointed is mission-specific. It could be the boresight,
            the camera head direction, the CAHV camera model A vector direction, or any of a
            number of other things. As such, for multimission use this value should be used
            mostly as an approximation, e.g. identifying scenes which might contain a given object.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>instrument_elevation</name>
        <version_id>1.0</version_id>
        <local_identifier>instrument_elevation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The instrument_elevation attribute specifies the value for an instrument's
            rotation in the vertical direction. It may be usually measured from a low hard stop,
            or relative to a coordinate frame. Although it may be used for any instrument
            where it makes sense, it is primarily intended for use in surface-based instruments
            that measure pointing in terms of azimuth and elevation. If this value is expressed
            using a coordinate system, the coordinate system is specified by the
            Coordinate_Space_Reference class. The interpretation of exactly what part of
            the instrument is being pointed is mission-specific. It could be the boresight,
            the camera head direction, the CAHV camera model A vector direction, or any of a
            number of other things. As such, for multimission use this value should be used
            mostly as an approximation, e.g. identifying scenes that might contain a given object.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>false</enumeration_flag>
          <value_data_type>ASCII_Real</value_data_type>
          <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>solar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>solar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The solar_azimuth attribute specifies one of two angular measurements
            indicating the direction to the Sun as measured from a specific point on the
            surface of a planet (eg., from a lander or rover). The positive direction of 
            azimuth is set by the positive_azimuth_direction attribute in the reference
            coordinate space. The azimuth is measured in the clockwise or counterclockwise
            direction (as viewed from above) with the meridian passing through the positive
            spin axis of the planet (i.e., the north pole) defining the zero reference.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>false</enumeration_flag>
          <value_data_type>ASCII_Real</value_data_type>
          <minimum_value>0.0</minimum_value>
          <maximum_value>360.0</maximum_value>
          <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
          <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>solar_elevation</name>
        <version_id>1.0</version_id>
        <local_identifier>solar_elevation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The solar_elevation attribute specifies one of two angular measurements
            indicating the direction to the Sun as measured from a specific point on the surface
            of a planet (eg., from a lander or rover). The positive direction of the elevation
            is set by the positive_elevation_direction attribute in the reference coordinate
            space. The elevation is measured from the plane which is normal to the line passing
            between the surface point and the planet's center of mass, and that intersects the surface point.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>false</enumeration_flag>
          <value_data_type>ASCII_Real</value_data_type>
          <minimum_value>-90.0</minimum_value>
          <maximum_value>90.0</maximum_value>
          <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
          <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
      <name>start_azimuth</name>
      <version_id>1.0</version_id>
      <local_identifier>start_azimuth</local_identifier>
      <nillable_flag>false</nillable_flag>
      <submitter_name>Jordan Padams</submitter_name>
      <definition>The start_azimuth attribute specifies the angular distance from a fixed
          reference position at which an image or observation starts. Azimuth is measured
          in a spherical coordinate system, in a plane normal to the principal axis. Azimuth
          values increase according to the right hand rule relative to the positive direction
          of the principal axis of the spherical coordinate system. When applied to a site
          or surface projection coordinate space, specifies the azimuth of the left edge of
          the output map. Applies to Cylindrical and Cylindrical-Perspective projections only.
      </definition>
      <DD_Value_Domain>
        <enumeration_flag>false</enumeration_flag>
        <value_data_type>ASCII_Real</value_data_type>
        <minimum_value>0.0</minimum_value>
        <maximum_value>360.0</maximum_value>
        <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
        <specified_unit_id>deg</specified_unit_id>
      </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The stop_azimuth attribute specifies the angular distance from a fixed
            reference position at which an image or observation stops. Azimuth is measured
            in a spherical coordinate system, in a plane normal to the principal axis. Azimuth
            values increase according to the right hand rule relative to the positive direction
            of the principal axis of the spherical coordinate system. When applied to a site or
            surface projection coordinate space, specifies the azimuth of the right edge of the
            output map. Applies to Cylindrical and Cylindrical-Perspective projections only.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>false</enumeration_flag>
          <value_data_type>ASCII_Real</value_data_type>
          <minimum_value>0.0</minimum_value>
          <maximum_value>360.0</maximum_value>
          <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
          <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>command_type</name>
        <version_id>1.0</version_id>
        <local_identifier>command_type</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Specifies how the device was commanded.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Angle_Absolute</value>
                <value_meaning>
                    Specifies an absolute pointing direction for the device. 
                    This is distinct from Joint_Absolute in that the angle is measured in a 
                    coordinate frame rather than direct joint angles.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Angle_Relative</value>
                <value_meaning>
                    Specifies a pointing direction change relative to the prior
                    pointing. This is distinct from Joint_Relative in that the angle is 
                    measured in a coordinate frame rather than direct joint angles.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Joint_Absolute</value>
                <value_meaning>
                    Specifies absolute joint angles.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Joint_Relative</value>
                <value_meaning>
                    Specifies joint angles as a delta relative to the prior pointing.. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>XYZ</value>
                <value_meaning>
                    Specifies a pointing target as an XYZ coordinate in a given coordinate frame.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>No_Motion</value>
                <value_meaning>
                    Specifies no motion from the previous observation.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>No_Motion_No_Arb</value>
                <value_meaning>
                    Specifies no motion from the previous observation, but also does not 
                    reserve the resource (thus no arbitration).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>None</value>
                <value_meaning>
                    Unspecified commanding.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

<!-- Classes Building Blocks section -->

<!-- Global use classes  -->

    <DD_Class>
        <name>Body_Identification_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Body_Identification_Base</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Body_Identification_Base class provides multiple attributes
            that can be used to identify a physical object (spacecraft, planet 
            instrument, transmitter, system barycenter, etc.). At least one must be used.
        </definition>
        <abstract_flag>true</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>body_spice_name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.Internal_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Frame_Identification_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Frame_Identification_Base</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Frame_Identification_Base class provides multiple attributes
            that can be used to identify a reference frame. At least one must be used.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>frame_spice_name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.Internal_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Central_Body_Identification</name>
        <version_id>2.0</version_id>
        <local_identifier>Central_Body_Identification</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Central_Body_Identification class uniquely
            identifies the body that is the central body associated
            with an observation (e.g., Saturn for Saturn system observations).
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Body_Identification_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Coordinate_System_Origin_Identification</name>
        <version_id>2.0</version_id>
        <local_identifier>Coordinate_System_Origin_Identification</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Coordinate_System_Origin_Identification class uniquely identifies
          the "body" that is the origin of a coordinate system. Typically body centered 
          coordinate systems place the origin at the center of mass of the body. In addition 
          to physical bodies, the origin may be defined at a point in space such as a system 
          barycenter. Note that the origin of coordinate system does not necessarily correspond 
          to either end point of a vector.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Body_Identification_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Observer_Identification</name>
        <version_id>2.0</version_id>
        <local_identifier>Observer_Identification</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Within the Geometry dictionary context, an "Observer" is the body on
            the "from" end of a vector, or other translation through space.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Body_Identification_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Reference_Frame_Identification</name>
        <version_id>2.0</version_id>
        <local_identifier>Reference_Frame_Identification</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Reference_Frame_Identification class is
            a base class for identifying reference frames.  These 
            are frames in the NAIF sense, i.e., three orthogonal
            axes with a specified orientation, but without a fixed origin.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Frame_Identification_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Geometry_Target_Identification</name>
        <version_id>2.0</version_id>
        <local_identifier>Geometry_Target_Identification</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The object to which the associated set of geometric parameters 
        	  are given. Within the Geometry dictionary context, a "Target" is the body 
        	  on the "to" end of a vector, or other translation through space.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Body_Identification_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Coordinate_Space_Index</name>
        <version_id>2.0</version_id>
        <local_identifier>Coordinate_Space_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Identifies a coordinate space using an index value given in an identified list.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_No_Units</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Coordinate_Space_SPICE</name>
        <version_id>1.0</version_id>
        <local_identifier>Coordinate_Space_SPICE</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Identifies a coordinate space using SPICE names for the frame and origin.</definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>body_spice_name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>frame_spice_name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Coordinate_Space_Indexed</name>
        <version_id>4.0</version_id>
        <local_identifier>Coordinate_Space_Indexed</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Coordinate_Space_Indexed class contains the attributes and 
        classes identifying the indexed coordinate space.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>coordinate_space_frame_type</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>solution_id</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Coordinate_Space_Identification</name>
        <version_id>2.0</version_id>
        <local_identifier>Coordinate_Space_Identification</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Coordinate_Space_Identification class uniquely identifies a coordinate
            space (i.e., reference frame + position) with respect to which the values of the
            attributes in the containing class are defined. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>Coordinate_Space_Indexed</identifier_reference>
            <identifier_reference>Coordinate_Space_SPICE</identifier_reference>
            <identifier_reference>pds.Local_Internal_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Coordinate_Space_Reference</name>
        <version_id>1.0</version_id>
        <local_identifier>Coordinate_Space_Reference</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Coordinate_Space_Reference class includes the attributes 
          that identify the coordinate space being used to express coordinates in
          the class in which it appears.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>true</element_flag>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Identification</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Coordinate_System_Identification</name>
        <version_id>1.0</version_id>
        <local_identifier>Coordinate_System_Identification</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Coordinate_System_Identification class fully describes a
        coordinate system. This class is typically used for orbiter/flyby geometry 
        while the Coordinate_Space construction is used for lander/rover geometry. 
        Coordinate_System_Identification provides the reference frame, coordinate 
        system type (cartesian, planetocentric, etc.), origin, and the instantiation 
        time of the system when appropriate. The instantiation time (coordinate_system_time_utc)
        is used when a rotating frame has been 'frozen' at a particular epoch. Instantiation
        time is not needed for inertial or rotating frames.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>coordinate_system_type</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>coordinate_system_time_utc</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Origin_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Reference_Frame_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Polynomial_Coefficients_1</name>
        <version_id>1.0</version_id>
        <local_identifier>Polynomial_Coefficients_1</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Polynomial_Coefficients_1 class provides a one polynomial coefficient.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>c0</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Polynomial_Coefficients_2</name>
        <version_id>1.0</version_id>
        <local_identifier>Polynomial_Coefficients_2</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Polynomial_Coefficients_2 class provides two polynomial coefficients.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>c0</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>c1</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Polynomial_Coefficients_3</name>
        <version_id>1.0</version_id>
        <local_identifier>Polynomial_Coefficients_3</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Polynomial_Coefficients_3 class provides three polynomial coefficients.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>c0</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>c1</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>c2</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Rotate_From</name>
        <version_id>1.0</version_id>
        <local_identifier>Rotate_From</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>A quaternion rotates one reference frame to another 
         reference frame. The Rotate_From class identifies the initial frame.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Frame_Identification_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Rotate_To</name>
        <version_id>1.0</version_id>
        <local_identifier>Rotate_To</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>A quaternion rotates a one reference frame to another  
          reference frame. The Rotate_To class identifies the destination frame.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Frame_Identification_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Quaternion_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Quaternion_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Quaternion_Base class defines a quaternion that represents
          rotation between two right-handed reference frames. In this dictionary, quaternions 
          are always constructed so that the application of the quaternion describes the 
          rotation of one frame to a second frame. The two frames and the direction of 
          rotation must be identified unambiguously in the enclosing classes.
          
          Quaternions are expressed as a set of four numbers in the order  
          (qcos, qsin1, qsin2, qsin3), where qcos = cos(theta/2) and 
           qsin(n) = sin(theta/2)*a(n). Theta is the angle of rotation and a is the
           unit vector (x,y,z) around which the rotation occurs.
          
          A document providing the full mathematical basis for this construction, 
          along with examples, and a summary of common pitfalls, is in preparation.
          The current version can be obtained by contacting the PDS Engineering Node.
                    
          In application you need to know the four elements of the quaternion, the two end 
          point frames, and the direction of the rotation. This dictionary provides two 
          extensions to this Base class. In the Quaternion_Plus_Direction class we require the direction of 
          rotation. This class can only be used if the two end point frames are identified in 
          the enclosing class. This is generally the case in the Lander section.
          The Quaternion_Plus_To_From class requires the two frames be identified explicitly with one 
          designated as the "from frame" and the other as the "to frame". 
        </definition>
        <abstract_flag>true</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>qcos</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>qsin1</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>qsin2</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>qsin3</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Quaternion_Model_Transform</name>
        <version_id>1.0</version_id>
        <local_identifier>Quaternion_Model_Transform</local_identifier>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The Quaternion_Model_Transform class specifies, along with Vector_Model_Transform
            class, the transform used for the camera model in an image. Camera models created by the
            calibration process have associated with them a pose, comprised of the position (offset)
            and orientation (quaternion) of the camera at the time it was calibrated. The model is
            transformed ("pointed") for a specific image by computing, generally using articulation
            device kinematics, a final pose for the image. The camera model is then translated and
            rotated from the calibration to final pose. This class specifies the quaternion portion
            of the final pose.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Quaternion_Base</identifier_reference>
          <reference_type>parent_of</reference_type>
          <minimum_occurrences>1</minimum_occurrences>
          <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Quaternion_Plus_Direction</name>
        <version_id>1.0</version_id>
        <local_identifier>Quaternion_Plus_Direction</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Quaternion_Plus_Direction provides the four elements of a quaternion and its  
          direction of rotation. The two end point frames must be identified in 
          the enclosing class. See the definition of Quaternion_Base for more details 
          on the quaternion classes in this dictionary.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Quaternion_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>rotation_direction</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Quaternion_Plus_To_From</name>
        <version_id>1.0</version_id>
        <local_identifier>Quaternion_Plus_To_From</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Quaternion_Plus_To_From provides the four
        elements of a quaternion, plus attributes which identify the initial
        (Rotate_From) and final (Rotate_To) frames of the rotation. See
        the defintion of Quaternion_Base for more details on the
        quaternion classes in this dictionary.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Quaternion_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Rotate_From</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Rotate_To</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>SPICE_Kernel_Identification</name>
        <version_id>2.0</version_id>
        <local_identifier>SPICE_Kernel_Identification</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The SPICE_Kernel_Identification class optionally includes 
            the SPICE kernel type and provides two alternatives for identifying 
            the product: LIDVID using Internal_Reference, and the file name of 
            the kernel file. Although optional, LIDVID should be given if one 
            is available. The optional kernel_provenance attribute indicates 
            whether the kernel is a predict or reconstructed kernel, or some 
            combination of the two, or if it is a kernel type for which such 
            distinctions do not apply.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.kernel_type</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>spice_kernel_file_name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>kernel_provenance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.Internal_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>SPICE_Kernel_Files</name>
        <version_id>1.0</version_id>
        <local_identifier>SPICE_Kernel_Files</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The SPICE_Kernel_Files class provides references to the
            SPICE files used when calculating geometric values. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>SPICE_Kernel_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Indexed List Classes -->
        
    <DD_Class>
        <name>List_Index_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>List_Index_Base</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The List_Index class is an abstract class designed to enable the use of
            indexed lists. The minimum requirement is at least one of sequence number, name or "id", 
            plus the set of values themselves.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>index_sequence_number</identifier_reference>
            <identifier_reference>index_name</identifier_reference>
            <identifier_reference>index_id</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>3</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>List_Index_Angle</name>
        <version_id>1.0</version_id>
        <local_identifier>List_Index_Angle</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Used when the list values are angles.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>index_value_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>List_Index_Length</name>
        <version_id>1.0</version_id>
        <local_identifier>List_Index_Length</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Used when the list values are lengths.</definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>index_value_length</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>List_Index_No_Units</name>
        <version_id>1.0</version_id>
        <local_identifier>List_Index_No_Units</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Used when the list values have no units.</definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>index_value_number</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>List_Index_Text</name>
        <version_id>1.0</version_id>
        <local_identifier>List_Index_Text</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Used when the list values are strings.</definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>index_value_string</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>List_Index_Temperature</name>
        <version_id>1.0</version_id>
        <local_identifier>List_Index_Temperature</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Used when the list values are temperatures. They may also have accompanying
            temperature counts using index_value_number.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>index_value_temperature</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>index_value_number</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Clases for the Image_Display_Geometry class  -->

    <DD_Class>
        <name>Display_Direction</name>
        <version_id>1.0</version_id>
        <local_identifier>Display_Direction</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Note: For all image objects, the expectation is that the 
        image orientation will be given using the disp:Display_Direction 
        class. In the unusual case where an image object does not have 
        an associated disp:Display_Direction class, then, and only then,    
        Display_Direction class defined here should be present.
        	
        The Display_Direction class specifies which two 
        of the dimensions of an Array object should be displayed and how
        they should be displayed in the vertical (line) and horizontal 
        (sample) dimensions of a display device. This class is essentially 
        the same as the class of the same name in the Display Dictionary, and  
        is redefined here for convenience. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>horizontal_display_axis</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>horizontal_display_direction</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>vertical_display_axis</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>vertical_display_direction</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Reference_Pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>Reference_Pixel</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Reference_Pixel class provides the pixel coordinates, line and sample,
            to which values in the containing class apply. Integer values indicate the
            center of the pixel. Sub-pixel values are permitted. For pixel_sample, the leading
            edge (left edge for sample increasing to the right) has a value 0.5 less than the 
            integer value at the center, and the value for the trailing edge is the center integer
            value + 0.5. For pixel_line, the leading and trailing edges (top and bottom respectively 
            for line increasing downward) again are -0.5 and +0.5 with respect to the center integer value.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>vertical_coordinate_pixel</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>horizontal_coordinate_pixel</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Object_Orientation_North_East</name>
        <version_id>1.0</version_id>
        <local_identifier>Object_Orientation_North_East</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Object_Orientation_North_East class provides the parameters 
                    needed to describe the orientation of an external coordinate 
                    system relative to the image coordinate frame as described by the 
                    Display_Direction class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>north_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>east_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Reference_Frame_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
        
    <DD_Class>
        <name>Object_Orientation_RA_Dec</name>
        <version_id>1.0</version_id>
        <local_identifier>Object_Orientation_RA_Dec</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Object_Orientation_RA_Dec class provides the 
                    parameters needed to describe the orientation of 
                    the celestial reference frame relative to the image 
                    coordinate frame as described by the Display_Direction class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Reference_Pixel</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>reference_pixel_location</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>right_ascension_hour_angle</identifier_reference>
            <identifier_reference>right_ascension_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>declination_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>celestial_north_clock_angle</identifier_reference>
            <identifier_reference>ecliptic_north_clock_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>2</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Reference_Frame_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Object_Orientation_Clock_Angles</name>
        <version_id>1.0</version_id>
        <local_identifier>Object_Orientation_Clock_Angles</local_identifier>
        <submitter_name>Anne Raugh</submitter_name>
        <definition>The Object_Orientation_Clock_Angles class provides several 
                    clock angles which can be used to describe the orientation 
                    of the field of view with respect to various external references 
                    such as Celestial or Equatorial North.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
       <DD_Association>
           <identifier_reference>XSChoice#</identifier_reference>
           <identifier_reference>celestial_north_clock_angle</identifier_reference>
           <identifier_reference>celestial_east_clock_angle</identifier_reference>
           <identifier_reference>ecliptic_north_clock_angle</identifier_reference>
           <identifier_reference>ecliptic_east_clock_angle</identifier_reference>
           <identifier_reference>central_body_north_pole_clock_angle</identifier_reference>
           <identifier_reference>central_body_positive_pole_clock_angle</identifier_reference>
           <identifier_reference>target_north_pole_clock_angle</identifier_reference>
           <identifier_reference>target_positive_pole_clock_angle</identifier_reference>
           <identifier_reference>sun_direction_clock_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
   </DD_Class>
    
<!-- Image_Display_Geometry class  -->

    <DD_Class>
        <name>Image_Display_Geometry</name>
        <version_id>4.0</version_id>
        <local_identifier>Image_Display_Geometry</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Image_Display_Geometry class provides an unambiguous description 
            of the orientation of the image contents. This class assumes an image 
            is displayed as described by a disp:Display_Direction class elsewhere 
            in the label. In the unusual case where an image object does not have 
            an associated disp:Display_Direction class, then, and only then, the   
            optionalgeom:Display_Direction class in this class should be present.
            
            Coupled with the information in the associated Display_Direction class, 
            any one of the Object_Orientation_* classes should allow unambiguous 
            orientation of the contents of the image. 
            
            The Local_Internal_Reference class is used to identify the object to which this
            instance of the Image_Display_Geometry class applies, and must be used if 
            there is more than one instance of Image_Display_Geometry in the label. The 
            appropriate value for local_reference_type is image_display_to_object.
            The Object_Orientation_North_East class is typically used for instruments for 
            which the entire field of view is a portion of the target surface (e.g., 
            instruments on Mars orbital spacecraft); otherwise use Object_Orientation_RA_Dec 
            (e.g., flyby missions, missions with orbit radii much larger than the target radius 
            such as Voyager or Cassini). At least one of these must be used. The two
            *_Identification classes used here are Central_Body (e.g., Saturn if you are using 
            Planetocentric or planetographic coordinates in the Saturn system) and Target when the 
            described object in the FoV is not the Central_Body. For example giving the orientation 
            of the pole of Enceladus in Saturn Planetocentric coordinates, Central_Body = Saturn, 
            Target = Enceladus. Bottom line: put in enough information so someone else can figure 
            out the orientation of the field of view. 
            We also offer an option to provide the pointing information as a quaternion.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.Local_Internal_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Display_Direction</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Central_Body_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>Object_Orientation_North_East</identifier_reference>
            <identifier_reference>Object_Orientation_RA_Dec</identifier_reference>
            <identifier_reference>Object_Orientation_Clock_Angles</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Quaternion_Plus_To_From</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
         </DD_Association>
    </DD_Class>

<!-- Expanded Geometry Class -->

    <DD_Class>
        <name>Expanded_Geometry</name>
        <version_id>1.0</version_id>
        <local_identifier>Expanded_Geometry</local_identifier>
        <submitter_name>Mitch Gordon</submitter_name>
        <definition>The Expanded_Geometry class provides a mechanism 
        	to reference additional geometric metadata contained in a separate 
        	object or product (e.g., a table of metadata).
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.Local_Internal_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.Internal_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Orbiter_Geometry Section  -->
<!--
       - Orbiter_Identification
       - Pixel_Dimensions
       - Distances
       - Surface_Geometry
       - Illumination_Geometry
       - Vectors
-->

<!-- Orbiter_Identification -->

    <DD_Class>
        <name>Orbiter_Identification</name>
        <version_id>1.0</version_id>
        <local_identifier>Orbiter_Identification</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Orbiter_Identification class is a container of classes 
        	used to establish global identifications for the Geometry_Orbiter class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Central_Body_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
    </DD_Class>

<!-- Classes for the Pixel_Dimensions class  -->

    <DD_Class>
        <name>Pixel_Size_Projected</name>
        <version_id>2.0</version_id>
        <local_identifier>Pixel_Size_Projected</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Pixel_Size_Projected class gives the size, 
            in units of length (e.g., kilometers) of the projection 
            of a pixel onto the surface of the target which is specified 
            in the parent Geometry_Orbiter class. The reference_location 
            attribute is used to identify the specific point on the target.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>reference_location</identifier_reference>
            <identifier_reference>distance</identifier_reference>
           <reference_type>attribute_of</reference_type>
           <minimum_occurrences>1</minimum_occurrences>
           <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
         <DD_Association>
             <identifier_reference>horizontal_pixel_footprint</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>vertical_pixel_footprint</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>        
    </DD_Class>
    
<!-- Pixel_Dimensions class  -->
    
    <DD_Class>
        <name>Pixel_Dimensions</name>
        <version_id>2.0</version_id>
        <local_identifier>Pixel_Dimensions</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Pixel_Dimensions class contains information regarding pixel size.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pixel_field_of_view_method</identifier_reference>
          <reference_type>attribute_of</reference_type>
          <minimum_occurrences>1</minimum_occurrences>
          <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>horizontal_pixel_field_of_view</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>vertical_pixel_field_of_view</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Pixel_Size_Projected</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Classes supporting the Distances classes -->
 
    <DD_Class>
        <name>Distance_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Distance_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The distance between the two objects, both of which must be specified.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Distances_Specific class -->
    
    <DD_Class>
        <name>Distances_Specific</name>
        <version_id>1.0</version_id>
        <local_identifier>Distances_Specific</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Distances_Specific class is a container class for 
        	specific distances defined in this dictionary.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>spacecraft_geocentric_distance</identifier_reference>
            <identifier_reference>spacecraft_heliocentric_distance</identifier_reference>
            <identifier_reference>spacecraft_central_body_distance</identifier_reference>
            <identifier_reference>spacecraft_target_center_distance</identifier_reference>
            <identifier_reference>spacecraft_target_boresight_intercept_distance</identifier_reference>
            <identifier_reference>spacecraft_target_subspacecraft_distance</identifier_reference>
            <identifier_reference>target_geocentric_distance</identifier_reference>
            <identifier_reference>target_heliocentric_distance</identifier_reference>
            <identifier_reference>target_ssb_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Distances_Min_Max class -->
    
    <DD_Class>
        <name>Distances_Min_Max</name>
        <version_id>1.0</version_id>
        <local_identifier>Distances_Min_Max</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Distances_Min_Max class is a container class for 
        	named distances given as minimum-maximum pairs. For distance, if
        	either the minimum or maximum parameter is given, both must be provided.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_central_body_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_central_body_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_target_center_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_target_center_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_target_boresight_intercept_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_target_boresight_intercept_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_target_subspacecraft_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_target_subspacecraft_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_target_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_target_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_target_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_target_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_target_ssb_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_target_ssb_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Distances_Start_Stop class -->
    
    <DD_Class>
        <name>Distances_Start_Stop</name>
        <version_id>1.0</version_id>
        <local_identifier>Distances_Start_Stop</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Distances_Start_Stop class is a container class for 
        	named distances given as pairs corresponding to the beginning and 
        	end of the observation. For a distance, if either the start or 
        	stop parameter is given, both must be provided. 
        	If any values from this class are included in the label, the 
        	parameters geometry_start_time_utc and geometry_stop_time_utc must be 
        	given in the enclosing Geometry_Orbiter class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>start_spacecraft_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_spacecraft_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_spacecraft_central_body_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_central_body_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_spacecraft_target_center_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_target_center_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_spacecraft_target_boresight_intercept_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_target_boresight_intercept_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_spacecraft_target_subspacecraft_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_target_subspacecraft_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_target_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_target_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_target_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_target_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_target_ssb_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_target_ssb_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>  
    
<!-- Distances class  -->

    <DD_Class>
        <name>Distances</name>
        <version_id>1.0</version_id>
        <local_identifier>Distances</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Distances class is a container of distance classes.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Distances_Specific</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Distances_Min_Max</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Distances_Start_Stop</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Distance_Generic</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
         </DD_Association>
    </DD_Class>

<!-- Surface_Geometry classes  -->
    
    <DD_Class>
        <name>Pixel_Intercept</name>
        <version_id>1.0</version_id>
        <local_identifier>Pixel_Intercept</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Pixel_Intercept class provides the latitude and 
            longitude on the surface of the target for the projection 
            of the specified pixel. The pixel is specified using either 
            reference_pixel_location or Reference_Pixel. Although each of 
            these is optional, one must be used.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>reference_pixel_location</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Reference_Pixel</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pixel_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pixel_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Footprint_Vertices</name>
        <version_id>2.0</version_id>
        <local_identifier>Footprint_Vertices</local_identifier>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The Footprint_Vertices class provides a set 
            of latitude and longitude pairs which are the vertices
            of a polygon representing the projected footprint of the 
            field of view on the target surface (or on a map).
            Note this is intended for products such as maps, 
            or where the target fills the field of view. The vertices should 
            be listed either in clockwise or counterclockwise order.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Pixel_Intercept</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>2</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
        
<!-- Surface_Geometry_Specific class -->   
    
    <DD_Class>
        <name>Surface_Geometry_Specific</name>
        <version_id>1.0</version_id>
        <local_identifier>Surface_Geometry_Specific</local_identifier>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The Surface_Geometry_Specific class contains classes and attributes 
            for various points on the surface of the target designated in the 
            enclosing Geometry_Orbiter.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Pixel_Intercept</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Footprint_Vertices</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subsolar_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subsolar_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subsolar_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subspacecraft_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subspacecraft_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subspacecraft_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Surface_Geometry_Min_Max class -->   
    
    <DD_Class>
        <name>Surface_Geometry_Min_Max</name>
        <version_id>1.0</version_id>
        <local_identifier>Surface_Geometry_Min_Max</local_identifier>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The Surface_Geometry_Min_Max class contains attributes 
          providing surface geometry parameters as minimum/maximum pairs. 
          For any given parameter if one of minimum or maximum is given, 
          both must be given.
          The min-max pairs for each parameter provide the range of that 
          parameter in the observation for the target specified using 
          the Geometry_Target_Identification class in the Orbiter_Identification 
          class under the parent Geometry_Orbiter class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>minimum_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subsolar_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subsolar_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subsolar_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subsolar_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subsolar_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subsolar_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subspacecraft_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subspacecraft_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subspacecraft_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subspacecraft_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subspacecraft_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subspacecraft_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Surface_Geometry_Start_Stop class -->   
    
    <DD_Class>
        <name>Surface_Geometry_Start_Stop</name>
        <version_id>1.0</version_id>
        <local_identifier>Surface_Geometry_Start_Stop</local_identifier>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The Surface_Geometry_Start_Stop class contains attributes 
          providing surface geometry parameters given as pairs corresponding to 
          the beginning and end of the observation. For a parameter, if either 
          the start or stop parameter is given, both must be provided. 
        	If any values from this class are included in the label, the 
        	parameters geometry_start_time_utc and geometry_stop_time_utc must be 
        	given in the enclosing Geometry_Orbiter class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>lat_long_method</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subsolar_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subsolar_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subsolar_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subsolar_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subsolar_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subsolar_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subspacecraft_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subspacecraft_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subspacecraft_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subspacecraft_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subspacecraft_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subspacecraft_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Surface_Geometry class  -->

    <DD_Class>
        <name>Surface_Geometry</name>
        <version_id>1.0</version_id>
        <local_identifier>Surface_Geometry</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Surface_Geometry class is a container for surface geometry classes.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Surface_Geometry_Specific</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Surface_Geometry_Min_Max</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Surface_Geometry_Start_Stop</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
    </DD_Class>

<!-- Classes for the Illumination_Geometry classes  -->
 
    <DD_Class>
        <name>Illumination_Specific</name>
        <version_id>1.0</version_id>
        <local_identifier>Illumination_Specific</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Illumination_Specific class contains attributes 
           providing illumination parameters at a single location in 
           the field of view. That location is specified by using one,
           and only one of reference_location, reference_pixel_location,
           or Reference_Pixel, If reference_location is used, and indicates 
           a point on a target, the target must be the one specified using 
           Geometry_Target_Identification in the parent Geometry_Orbiter class. 
           The provided value for each illumination attribute must correspond 
           to the time given by geometry_reference_time_utc.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>reference_location</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>reference_pixel_location</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Reference_Pixel</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>emission_angle</identifier_reference>
            <identifier_reference>incidence_angle</identifier_reference>
            <identifier_reference>phase_angle</identifier_reference>
            <identifier_reference>solar_elongation</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>4</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Illumination_Min_Max</name>
        <version_id>1.0</version_id>
        <local_identifier>Illumination_Min_Max</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Illumination_Min_Max class contains attributes 
          providing illumination parameters as minimum/maximum pairs. 
          For any given illumination parameter if one of minimum or 
          maximum is given, both must be given.
          If a target is specified using the Geometry_Target_Identification class in the 
          Orbiter_Identification class under the same parent Geometry_Orbiter class,
          the min-max pairs for each illumination parameter provide the range of that 
          parameter in the observation on that target. Otherwise the pair provides the 
          range for the entire field of view.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>minimum_emission_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_emission_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_incidence_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_incidence_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_phase_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_phase_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_solar_elongation</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_solar_elongation</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Illumination_Start_Stop</name>
        <version_id>1.0</version_id>
        <local_identifier>Illumination_Start_Stop</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Illumination_Start_Stop class contains attributes 
          providing illumination parameters as pairs  corresponding to 
          the beginning and end of the observation. If either the start or 
        	stop parameter is given, both must be provided. 
        	If any values from this class are included in the label, the 
        	parameters geometry_start_time_utc and geometry_stop_time_utc must be 
        	given in the enclosing Geometry_Orbiter class. 
          If a target is specified using the Geometry_Target_Identification class 
          in the Orbiter_Identification class under the parent Geometry_Orbiter 
          class, the start-stop pairs for each illumination parameter provide 
          the range of that parameter in the observation on that target. Otherwise 
          the pair provides the range for the entire field of view.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>start_emission_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_emission_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_incidence_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_incidence_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_phase_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_phase_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_solar_elongation</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_solar_elongation</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Illumination_Geometry class  -->

    <DD_Class>
        <name>Illumination_Geometry</name>
        <version_id>1.0</version_id>
        <local_identifier>Illumination_Geometry</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Illumination_Geometry class is a container for 
        	illumination geometry classes.</definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Illumination_Specific</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Illumination_Min_Max</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Illumination_Start_Stop</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
    </DD_Class>

<!-- Vector classes  -->
    
<!-- Base vectors (these do not include to/from attributes, nor do they
         include reference frame information).
          used to construct generic and specific vectors:
          Cartesian        position, velocity, acceleration
          Planetocentric   position, velocity                 -->
    
    <DD_Class>
        <name>Vector_Cartesian_Position_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Base is a three dimensional,  
            rectangular coordinates vector. Uses units of length. The   
            included attributes are not sufficient to identify the endpoints of the vector.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>x_position</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>y_position</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>z_position</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Cartesian_Position_Extended_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Extended_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Extended_Base is a three dimensional,  
            rectangular coordinates vector. Uses units of length. The included attributes are
            not sufficient to identify the endpoints of the vector. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>light_time_correction_applied</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Cartesian_Velocity_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Base is a three dimensional,  
            rectangular coordinates vector. Uses units of linear velocity.    
            The included attributes are not sufficient to identify the  
            endpoints of the vector.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>x_velocity</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>y_velocity</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>z_velocity</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Cartesian_Velocity_Extended_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Extended_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Extended_Base is a three dimensional,  
            rectangular coordinates vector. Uses units of linear velocity.    
            The included attributes are not sufficient to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>light_time_correction_applied</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Acceleration_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Acceleration_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Acceleration_Base is a three dimensional,  
            rectangular coordinates vector. Uses units of linear acceleration.    
            The included attributes are not sufficient to identify the endpoints of the vector.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>x_acceleration</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>y_acceleration</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>z_acceleration</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Cartesian_Acceleration_Extended_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Acceleration_Extended_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Acceleration_Extended_Base is a three dimensional,  
            rectangular coordinates vector. Uses units of linear acceleration.    
            The included attributes are not sufficient to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>light_time_correction_applied</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Acceleration_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Planetocentric_Position_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Base is a three dimensional
            spherical vector (radius, longitude, latitude) with the angular 
            coordinates defined to be consistent with the Planetocentric 
            coordinate system. Uses linear units for the radius dimension, and
            angular units for the other two dimensions. The included 
            attributes are not sufficient to identify the endpoints of the vector.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>radius_position</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>longitude_position</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>latitude_position</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Planetocentric_Position_Extended_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Extended_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Extended_Base is a three dimensional
            spherical vector (radius, longitude, latitude) with the angular 
            coordinates defined to be consistent with the Planetocentric 
            coordinate system. Uses linear units for the radius dimension, and
            angular units for the other two dimensions. The included 
            attributes are not sufficient to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>light_time_correction_applied</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Position_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Planetocentric_Velocity_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Base is a three dimensional
            spherical vector (radius, longitude, latitude) with the angular 
            coordinates defined to be consistent with the Planetocentric 
            coordinate system. Uses linear velocity units for the radius dimension, 
            and angular velocity units for the other two dimensions. The included 
            attributes are not sufficient to identify the endpoints of the vector.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>radial_velocity</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>longitude_velocity</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>latitude_velocity</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Planetocentric_Velocity_Extended_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Extended_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Extended_Base is a three dimensional
            spherical vector (radius, longitude, latitude) with the angular 
            coordinates defined to be consistent with the Planetocentric 
            coordinate system. Uses linear velocity units for the radius dimension, 
            and angular velocity units for the other two dimensions. The included 
            attributes are not sufficient to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>light_time_correction_applied</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Velocity_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    <DD_Class>
        <name>Vector_Cartesian_Unit</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Unit</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>This is a generic unit vector in Cartesian space.
            The "x", "y", and "z" component have no units and are restricted to
            values between -1.0 and 1.0 inclusive. Further the length of the 
            vector square root of the (sum of the squares of the components) must be 1.0.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>x_unit</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>y_unit</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>z_unit</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Cartesian_No_Units</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_No_Units</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>This is a generic vector in Cartesian space.
            The "x", "y", and "z" component have no units.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>x</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>y</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>z</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Cartesian_Pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Pixel</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>This a Cartesian pixel vector generally used in camera models.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>x_pixel</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>y_pixel</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>z_pixel</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Generic vectors (these  include to/from attributes);
          used when an appropriate specific vector has not been defined:
       Cartesian        position, velocity, acceleration
       Planetocentric   position, velocity                    -->

    <DD_Class>
        <name>Vector_Cartesian_Position_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Vector_Cartesian_Position_Generic is a three dimensional,  
            rectangular coordinates vector. Uses units of length. 
            Includes attributes to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Vector_Cartesian_Velocity_Generic is a three dimensional,  
            rectangular coordinates vector. Uses units of linear velocity. 
            Includes attributes to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.                    
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Acceleration_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Acceleration_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Vector_Cartesian_Acceleration_Generic is a three dimensional,  
            rectangular coordinates vector. Uses units of linear acceleration. 
            Includes attributes to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used                      
            here if the coordinate system has not been specified in the enclosing class.                                                                       
        </definition>                       
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Acceleration_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Planetocentric_Position_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Generic is a three dimensional
            spherical vector (radius, longitude, latitude) with the angular 
            coordinates defined to be consistent with the Planetocentric 
            coordinate system. Uses linear units for the radius dimension, and
            angular units for the other two dimensions. Includes attributes to 
            identify the endpoints of the vector. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Planetocentric_Velocity_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Generic is a three dimensional
            spherical vector (radius, longitude, latitude) with the angular 
            coordinates defined to be consistent with the Planetocentric 
            coordinate system. Uses linear velocity units for the radius dimension, 
            and angular velocity units for the other two dimensions. Includes  
            attributes to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Vectors for the Specific_Position_Vectors class -->

<!-- spacecraft, target, central_body  Cartesian vectors  -->

    <DD_Class>
        <name>Vector_Cartesian_Position_Central_Body_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Central_Body_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Central_Body_To_Spacecraft 
            is a linear, rectangular coordinates vector from the center 
            of mass of the central body (e.g., planet) to the spacecraft. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Central_Body_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Central_Body_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Central_Body_To_Target 
            is a linear, rectangular coordinates vector from the center 
            of mass of the central body (e.g., planet) to the target specified 
            in the parent Geometry_Orbiter class. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Spacecraft_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Spacecraft_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Spacecraft_To_Target 
            is a linear, rectangular coordinates vector from the spacecraft
            to the target specified in the parent Geometry_Orbiter class. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- spacecraft, target, central_body  Planetocentric vectors  -->

    <DD_Class>
        <name>Vector_Planetocentric_Position_Central_Body_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Central_Body_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Central_Body_To_Spacecraft
            is a spherical position vector in Planetocentric coordinates.  
            It extends from the center of mass of the central body (e.g., 
            planet) to the spacecraft. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Planetocentric_Position_Central_Body_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Central_Body_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Central_Body_To_Target 
            is a spherical position vector in Planetocentric coordinates.  
            It extends from the center of mass of the central body (e.g., 
            planet) to the target specified in the parent Geometry_Orbiter class. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Planetocentric_Position_Spacecraft_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Spacecraft_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Spacecraft_To_Target 
            is a spherical position vector in Planetocentric coordinates.  
            It extends from the spacecraft to the target specified in the parent 
            Geometry_Orbiter class.       
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- SSB vectors  -->

    <DD_Class>
        <name>Vector_Cartesian_Position_SSB_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_SSB_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_SSB_To_Central_Body
            is a linear, rectangular coordinates vector from the Solar
            System Barycenter to the central body (e.g., planet). 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_SSB_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_SSB_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_SSB_To_Spacecraft
            is a linear, rectangular coordinates vector from the Solar
            System Barycenter to the spacecraft. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>            
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_SSB_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_SSB_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_SSB_To_Target
            is a linear, rectangular coordinates vector from the Solar
            System Barycenter to the target specified in the parent 
            Geometry_Orbiter class.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Heliocentric vectors  -->

    <DD_Class>
        <name>Vector_Cartesian_Position_Sun_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Sun_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Sun_To_Central_Body 
            is a linear, rectangular coordinates vector from the Sun 
            to the central body (e.g., planet). 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Sun_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Sun_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Sun_To_Spacecraft 
            is a linear, rectangular coordinates vector from the Sun 
            to the spacecraft.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Sun_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Sun_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Sun_To_Target 
            is a linear, rectangular coordinates vector from the Sun 
            to the target specified in the parent Geometry_Orbiter class.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Geocentric vectors  -->

    <DD_Class>
        <name>Vector_Cartesian_Position_Earth_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Earth_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Earth_To_Central_Body 
            is a linear, rectangular coordinates vector from the Earth 
            to the central body (e.g., planet). 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Earth_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Earth_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Earth_To_Spacecraft 
            is a linear, rectangular coordinates vector from the Earth 
            to the spacecraft.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Earth_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Earth_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Earth_To_Target 
            is a linear, rectangular coordinates vector from the Earth 
            to the target specified in the parent Geometry_Orbiter class.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Vectors for the Specific_Velocity_Vectors class -->

<!-- spacecraft Cartesian velocity vectors  -->

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Spacecraft_Relative_To_Central_Body 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the spacecraft with respect to the  
            central body (e.g., planet). 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Spacecraft_Relative_To_Target 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the spacecraft with respect to the 
            target specified in the parent Geometry_Orbiter class.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Earth</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Earth</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Spacecraft_Relative_To_Earth 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the spacecraft with respect to Earth. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Spacecraft_Relative_To_SSB</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Spacecraft_Relative_To_SSB</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Spacecraft_Relative_To_SSB 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the spacecraft with respect to the 
            Solar System Barycenter. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Sun</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Sun</local_identifier>
        <submitter_name>Anne Raugh</submitter_name>
        <definition>
            Vector_Cartesian_Velocity_Spacecraft_Relative_To_Sun is a 
            velocity vector in rectangular coordinates that gives the
            velocity of the spacecraft with respect to the center of 
            the Sun.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- target Cartesian velocity vectors  -->

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Target_Relative_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Target_Relative_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Target_Relative_To_Central_Body 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the designated target with respect to the  
            central body (e.g., planet). 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Target_Relative_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Target_Relative_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Target_Relative_To_Spacecraft 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the designated target with respect to the  
            spacecraft. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Target_Relative_To_Earth</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Target_Relative_To_Earth</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Target_Relative_To_Earth 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the designated target with respect to Earth. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Target_Relative_To_SSB</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Target_Relative_To_SSB</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Target_Relative_To_SSB 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the designated target with respect  
            to the Solar System Barycenter. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

     <DD_Class>
        <name>Vector_Cartesian_Velocity_Target_Relative_To_Sun</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Target_Relative_To_Sun</local_identifier>
        <submitter_name>Anne Raugh</submitter_name>
        <definition>
            Vector_Cartesian_Velocity_Target_Relative_To_Sun is a 
            velocity vector in rectangular coordinates that gives the
            velocity of the designated target with respect to the center
            of the sun.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
         <element_flag>false</element_flag>
         <DD_Association>
             <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Planetocentric velocity vectors -->
  
    <DD_Class>
        <name>Vector_Planetocentric_Velocity_Spacecraft_Relative_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Spacecraft_Relative_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Spacecraft_Relative_To_Target 
            is a spherical velocity vector in Planetocentric coordinates that 
            gives the velocity of the spacecraft with respect to the designated 
            target. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
  
    <DD_Class>
        <name>Vector_Planetocentric_Velocity_Target_Relative_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Target_Relative_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Target_Relative_To_Central_Body 
            is a spherical velocity vector in Planetocentric coordinates that 
            gives the velocity of the target with respect to the central body. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
  
    <DD_Class>
        <name>Vector_Planetocentric_Velocity_Target_Relative_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Target_Relative_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Target_Relative_To_Spacecraft 
            is a spherical velocity vector in Planetocentric coordinates that 
            gives the velocity of the target with respect to the spacecraft. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Vector classes for the Geometry_Orbiter class -->

<!-- Vectors_Cartesian_Specific class  -->
    
    <DD_Class>
        <name>Vectors_Cartesian_Specific</name>
        <version_id>1.0</version_id>
        <local_identifier>Vectors_Cartesian_Specific</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vectors_Cartesian_Specific class is a 
            container class for all cartesian vectors 
            with pre-identified endpoints.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Central_Body_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Central_Body_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Spacecraft_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_SSB_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_SSB_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_SSB_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Sun_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Sun_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Sun_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Earth_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Earth_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Earth_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Earth</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Spacecraft_Relative_To_SSB</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Sun</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Target_Relative_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Target_Relative_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Target_Relative_To_Earth</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Target_Relative_To_SSB</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Target_Relative_To_Sun</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Vectors_Planetocentric_Specific class  -->
    
    <DD_Class>
        <name>Vectors_Planetocentric_Specific</name>
        <version_id>1.0</version_id>
        <local_identifier>Vectors_Planetocentric_Specific</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vectors_Planetocentric_Specific class is a 
            container class for all planetocentric vectors 
            with pre-identified endpoints.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Position_Central_Body_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Position_Central_Body_To_Target</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Position_Spacecraft_To_Target</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Velocity_Spacecraft_Relative_To_Target</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Velocity_Target_Relative_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Velocity_Target_Relative_To_Spacecraft</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Generic_Vectors class  -->
  
    <DD_Class>
        <name>Generic_Vectors</name>
        <version_id>1.0</version_id>
        <local_identifier>Generic_Vectors</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Generic_Vectors class is a container class for all 
            of the build your own vector templates.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
         <DD_Association>
             <identifier_reference>XSChoice#</identifier_reference>
             <identifier_reference>Vector_Cartesian_Position_Generic</identifier_reference>
             <identifier_reference>Vector_Cartesian_Velocity_Generic</identifier_reference>
             <identifier_reference>Vector_Cartesian_Acceleration_Generic</identifier_reference>
             <identifier_reference>Vector_Planetocentric_Position_Generic</identifier_reference>
             <identifier_reference>Vector_Planetocentric_Velocity_Generic</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Model_Transform</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Model_Transform</local_identifier>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The Vector_Model_Transform class specifies, along with the Quaternion_Model_Transform
            class, the transform used for the camera model in this image. Camera models created by the
            calibration process have associated with them a pose, comprised of the position (offset)
            and orientation (quaternion) of the camera at the time it was calibrated. The model is
            transformed ("pointed") for a specific image by computing, generally using articulation device
            kinematics, a final pose for the image. The camera model is then translated and rotated from
            the calibration to final pose. This class specifies the offset portion of the final pose.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_No_Units</identifier_reference>
          <reference_type>parent_of</reference_type>
          <minimum_occurrences>1</minimum_occurrences>
          <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Vectors class -->    

    <DD_Class>
        <name>Vectors</name>
        <version_id>1.0</version_id>
        <local_identifier>Vectors</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vectors class is a container of vector classes.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vectors_Cartesian_Specific</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Vectors_Planetocentric_Specific</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Generic_Vectors</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
    </DD_Class>

<!-- Geometry_Orbiter Class -->

<!--      If any of the contained classes or attributes used in the label have central body, 
          and or target in the attribute or class name (e.g., spacecraft_to_central_body_distance, 
          Vector_Planetocentric_Position_Spacecraft_To_Target), then the central body and or target must
          be identified in this class. 
          
          If more than one target or central body need to be identified to fully describe the data,
          use multiple instances of the Geometry_Orbiter class.
          
          Only use coordinate system at this level if only one coordinate system is used in the label.
          Otherwise, specify coordinate system in each of the subordinate classes where it is appropriate. 
    -->

    <DD_Class>
        <name>Geometry_Orbiter</name>
        <version_id>2.0</version_id>
        <local_identifier>Geometry_Orbiter</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Geometry_Orbiter class is a container for geometric information 
          (positions, velocities, orientations, etc.) relevant to orbiter or flyby 
          spacecraft observations. 
          
          If any of the contained classes or attributes have central body, 
          and or target in the class or attribute name
          (e.g., spacecraft_to_central_body_distance,
          Vector_Planetocentric_Position_Spacecraft_To_Target), then the
          central body and or target must be identified in this class. 
          
          If more than one geometry_reference_time_utc, target or central body need 
          to be identified to fully describe the data, use multiple instances of 
          the Geometry_Orbiter class.
          
          Do not use Coordinate_System at this level if more than one coordinate 
          system is used in the contained classes. If more than one coordinate system
          is used, specify Coordinate_System in each of the subordinate classes
          where it is appropriate. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>geometry_reference_time_utc</identifier_reference>
            <identifier_reference>geometry_start_time_utc</identifier_reference>
            <identifier_reference>geometry_stop_time_utc</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>3</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>geometry_reference_time_tdb</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Orbiter_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Pixel_Dimensions</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Distances</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Surface_Geometry</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Illumination_Geometry</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vectors</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Quaternion_Plus_To_From</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Lander Geometry Section -->

<!-- Classes supporting Articulation_Device_Parameters -->
    
    <DD_Class>
        <name>Commanded_Position</name>
        <version_id>1.0</version_id>
        <local_identifier>Commanded_Position</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Specifies a Cartesian position used in commanding the device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Commanded_Geometry</name>
        <version_id>1.0</version_id>
        <local_identifier>Commanded_Geometry</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Specifies how the device was commanded in order to achieve the state
            represented in the enclosing Articulation_Device_Parameters. Commands
            are often at a higher level, e.g. point at this location or move to 
            this XYZ, which is translated by flight software to the actual pose 
            of the device. Certain forms of command are measured in a coordinate 
            frame; this is specified by the Coordinate_Space_Reference in this class 
            (if not present, the Coordinate_Space_Reference in the 
            Articulation_Device_Parameters parent should be assumed).
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>command_type</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Device_Angle</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Commanded_Position</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Angle_Index</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Angle_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Angle class is a container for the set of
          angles the spacecraft device specified in the parent 
          Articulation_Device_Parameters class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Angle</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Angle</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Angle</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Angle class is a container for the set of
          angles between the various components or devices of the spacecraft.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Device_Angle_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Component_State_Index</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Component_State_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Component_State_Index class is a container 
          for one state of a component of the articulation device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Text</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Component_State</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Component_State</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Component_State class is a container for the
            states of the various components of the articulation device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Device_Component_State_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
     
    <DD_Class>
        <name>Device_Motor_Counts_Index</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Motor_Counts_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Motor_Counts_Index class is a container 
          for the attributes that describe the motor step count information 
          for a single motor on a device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_No_Units</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Motor_Counts</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Motor_Counts</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Motor_Counts class is a container for the classes
            that describe the motor step count information for device components.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Device_Motor_Counts_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <!-- Device_Pose -->
    <DD_Class>
        <name>Device_Pose</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Pose</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>Defines the pose of this articulation device. The name indicates 
            what exactly is being measured and how, and disambiguates if there is more 
            than one Device_Pose. For example, Mars 2020 has "arm_attitude_reference", 
            which indicates the pose of the rover that was used to calculate gravity droop
            of the arm. The interpretation of the pose is mission-specific; see the 
            mission documentation.</definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Quaternion_Plus_Direction</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Origin_Offset</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Device_Gravity</name>
        <version_id>2.0</version_id>
        <local_identifier>Vector_Device_Gravity</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Device_Gravity class is a unit vector that specifies 
            the direction of an external force acting on the articulation 
            device, in the spacecraft's coordinate system, at the time the pose was computed.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Device_Gravity_Magnitude</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Device_Gravity_Magnitude</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>The Vector_Device_Gravity_Magnitude class is a vector (with magnitude) that specifies 
            the direction of an external force acting on the articulation 
            device, in the spacecraft's coordinate system, at the time the pose was computed.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Acceleration_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Temperature_Index</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Temperature_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Temperature_Index class specifies the 
        	attributes describing the temperature of one device or some part of a device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Temperature</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Temperature</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Temperature</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Temperature class is a container for all 
          available device temperatures of an articulated device and/or 
          part(s) of a device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Device_Temperature_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Classes supporting  Camera_Model_Parameters        --> 

    <DD_Class>
        <name>Vector_Axis</name>
        <version_id>2.0</version_id>
        <local_identifier>Vector_Axis</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Axis is a unit vector that describes the axis  
            of the camera, defined as the normal to the image plane.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Center</name>
        <version_id>2.0</version_id>
        <local_identifier>Vector_Center</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Center describes the location of the entrance
            pupil of a camera.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Horizontal</name>
        <version_id>2.0</version_id>
        <local_identifier>Vector_Horizontal</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Horizonal is a composite vector encoding three
            quantities: H' (a vector in the image plane perpendicular to the
            vertical columns), Hs (the distance between the lens center and
            image plane, measured in horizontal pixels), and Hc (the horizontal
            image coordinate directly under C when moving parallel to A).  H' is
            often thought of as describing the orientation of rows in space,
            but is actually perpendicular to the columns.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Pixel</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Vertical</name>
        <version_id>2.0</version_id>
        <local_identifier>Vector_Vertical</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Vertical is a composite vector encoding three
            quantities: V' (a vector in the image plane perpendicular to the
            horizontal rows), Vs (the distance between the lens center and
            image plane, measured in vertical pixels), and Vc (the vertical
            image coordinate directly under C when moving parallel to A).  V' is
            often thought of as describing the orientation of columns in space,
            but is actually perpendicular to the rows. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Pixel</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Optical</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Optical</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Optical is a unit vector that describes the axis of
            symmetry for radial distortion in the camera. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Radial_Terms</name>
        <version_id>2.0</version_id>
        <local_identifier>Radial_Terms</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Radial_Terms contains the coefficients of a polynomial
            function used to describe the radial distortion of the camera. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Polynomial_Coefficients_3</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Entrance_Terms</name>
        <version_id>1.0</version_id>
        <local_identifier>Entrance_Terms</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Entrance_Terms contains the coefficients of a polynomial
            function used to model movement of the entrance pupil.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Polynomial_Coefficients_3</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Axis_X</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Axis_X</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Unit column-plane rotation axis, passing through the sphere center,
            typically vertical and pointing down so that positive rotations
            (by the right-hand rule) will rotate the forward half of the plane
            in the (rightward) direction of increasing column (as projected on 
            the forward hemisphere).
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Axis_Y</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Axis_Y</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Unit row-plane rotation axis, passing through the sphere center,
            typically horizontal and pointing left so that positive rotations
            (by the right-hand rule) will rotate the forward half of the plane
            in the (downward) direction of increasing row (as projected on 
            the forward hemisphere).
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Solar_Direction</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Solar_Direction</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Unit vector pointing in the direction of the Sun at the time of the observation.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Normal_X</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Normal_X</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Unit normal vector to the column plane when x equals zero,
            pointing in the same direction as the cross product of axis x
            with an outward-pointing vector that also lies in the plane.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Normal_Y</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Normal_Y</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Unit normal vector to the row plane when y equals zero,
            pointing in the same direction as the cross product of
            axis x with an outward-pointing vector that also lies in
            the plane.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>CAHV_Model</name>
        <version_id>3.0</version_id>
        <local_identifier>CAHV_Model</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The CAHV model is a linear, perspective-projection camera model
            (equivalent to a pinhole camera).  It consists of four 3-vectors (C,A,H,V)
            that describe the internal and external camera model parameters needed to
            translate between 2D image coordinates and 3D world coordinates.  C
            (Vector_Center) is the 3D position of the pinhole (center of the entrance
            pupil).  A (Vector_Axis) is a unit vector normal to the image plane
            pointing outward.  H (Vector_Horizontal) is a composite vector encoding
            three quantities: H' (a vector in the image plane perpendicular to the
            vertical columns), Hs (the distance between the lens center and image
            plane, measured in horizontal pixels), and Hc (the horizontal image
            coordinate directly under C when moving parallel to A).  V
            (Vector_Vertical) similarly composites the analogous V', Vs, and Vc in
            the vertical direction.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Center</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Axis</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Horizontal</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Vertical</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>CAHVOR_Model</name>
        <version_id>2.0</version_id>
        <local_identifier>CAHVOR_Model</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The CAHVOR model is built upon CAHV (see CAHV_Model), adding
            radial (barrel or pincushion) distortion to the linear model.  It adds
            two more 3-vectors to CAHV.  O (Vector_Optical) is a unit vector
            representing the axis of symmetry for the radial distortion.  R
            (Radial_Terms) contains the coefficients of a polynomial function
            that describes the radial distortion.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Optical</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Radial_Terms</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>CAHV_Model</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>CAHVORE_Model</name>
        <version_id>3.0</version_id>
        <local_identifier>CAHVORE_Model</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The CAHVORE model is built upon CAHVOR (see CAHVOR_Model),
            adding support for fisheye lenses.  It adds one more 3-vector and
            two scalars to CAHVOR.  E (Entrance_Terms) contains the coefficients
            of a polynomial function used to model movement of the entrance pupil.
            The two scalars, cahvore_model_type and cahvore_model_parameter,
            together specify the type of lens being modeled. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Entrance_Terms</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>cahvore_model_type</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>cahvore_model_parameter</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>CAHVOR_Model</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>PSPH_Model</name>
        <version_id>1.0</version_id>
        <local_identifier>PSPH_Model</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            A new camera model designed to perform better fisheye-image rectification
            prior to 1D stereo correlation. The primary innovation is the use of a 
            unit projection sphere rather than an image plane. For epipolar alignment 
            between stereo cameras the rows (for a left/right pair) or the columns
            (for an up/down pair) of both must lie along the same plane. Thus we use 
            a pair of planes to define the rows and columns. Each plane will rotate 
            around a static dedicated axis passing through the sphere center. Pixels 
            will be located where the planes intersect with each other and the unit sphere.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Center</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Axis_X</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Axis_Y</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Normal_X</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Normal_Y</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>psph_model_scale_x</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>psph_model_scale_y</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Interpolation</name>
        <version_id>1.0</version_id>
        <local_identifier>Interpolation</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>The Interpolation class defines how the camera model was interpolated from the 
            calibration models. Interpolation is used to create models in a variable space (e.g., focus,
            zoom) between points at which calibration was performed. If more than one dimension of
            variables were interpolated, multiple Interpolation objects can exist, with interpolation_sequence
            defining the order.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>interpolation_algorithm</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>interpolation_variable</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>interpolation_value</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>interpolation_sequence</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    

<!-- Classes supporting  Coordinate_Space_Definition    -->   
    
    <DD_Class>
        <name>Coordinate_Space_Present</name>
        <version_id>1.0</version_id>
        <local_identifier>Coordinate_Space_Present</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Coordinate_Space_Present class  includes the attributes 
          that identifies the coordinate space presently being defined.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Identification</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Origin_Offset</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Origin_Offset</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Origin_Offset class contains attributes that 
            specify the offset from the reference coordinate system's origin 
            to the origin of the coordinate system. It is the location of the 
            current system's origin as measured in the reference system.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Coordinate_Space_Quality</name>
        <version_id>1.0</version_id>
        <local_identifier>Coordinate_Space_Quality</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>Parameters that indicate the quality of the coordinate
            space knowledge.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>quaternion_measurement_method</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>attitude_propagation_counter</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>attitude_propagation_duration</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Classes supporting  the Motion_Counter class -->   
    
    <DD_Class>
        <name>Motion_Counter_Index</name>
        <version_id>1.0</version_id>
        <local_identifier>Motion_Counter_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Motion_Counter_Index class identifies and populates
            one element of a Motion_Counter list.  The class should be repeated
            for each element of the list.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_No_Units</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Top tier classes within the Geometry class -->
    
<!-- Articulation_Device_Parameters Class -->
    
    <DD_Class>
        <name>Articulation_Device_Parameters</name>
        <version_id>3.0</version_id>
        <local_identifier>Articulation_Device_Parameters</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Articulation_Device_Parameters class contains those 
          attributes and sub-classes that describe an articulation device. 
          An articulation device is anything that can move independently 
          of the spacecraft to which it is attached. Examples include mast 
          heads, wheel bogies, arms, filter wheel, scan platforms.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>device_id</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>device_name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>device_mode</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>device_phase</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>selected_instrument_id</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>Device_Angle</identifier_reference>
            <identifier_reference>Device_Component_State</identifier_reference>
            <identifier_reference>Device_Motor_Counts</identifier_reference>
            <identifier_reference>Device_Pose</identifier_reference>
            <identifier_reference>Vector_Device_Gravity</identifier_reference>
            <identifier_reference>Vector_Device_Gravity_Magnitude</identifier_reference>
            <identifier_reference>Device_Temperature</identifier_reference>
            <identifier_reference>Coordinate_Space_Present</identifier_reference>
            <identifier_reference>Coordinate_Space_Reference</identifier_reference>
            <identifier_reference>Commanded_Geometry</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Camera_Model_Parameters Class --> 

    <DD_Class>
        <name>Camera_Model_Parameters</name>
        <version_id>2.0</version_id>
        <local_identifier>Camera_Model_Parameters</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>A camera model describes the mathematical relationship
            between the coordinates of a point in 3-dimensional space and its
            projection onto a 2-dimensional image plane.  There are numerous
            types of camera models.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>model_type</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>calibration_source_id</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>solution_id</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.Internal_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>CAHV_Model</identifier_reference>
            <identifier_reference>CAHVOR_Model</identifier_reference>
            <identifier_reference>CAHVORE_Model</identifier_reference>
            <identifier_reference>PSPH_Model</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>Reference_Frame_Identification</identifier_reference>
            <identifier_reference>Coordinate_Space_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Quaternion_Model_Transform</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Model_Transform</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Interpolation</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
        
<!-- Coordinate_Space_Definition class --> 

    <DD_Class>
        <name>Coordinate_Space_Definition</name>
        <version_id>3.0</version_id>
        <local_identifier>Coordinate_Space_Definition</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Coordinate_Space classes are typically used for lander/rover 
            geometry while the Coordinate_System construction is used for 
            orbiter/flyby geometry. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>positive_azimuth_direction</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>positive_elevation_direction</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Present</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Origin_Offset</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Quaternion_Plus_Direction</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>quaternion_measurement_method</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Quality</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

<!-- Derived_Geometry class --> 

    <DD_Class>
        <name>Derived_Geometry</name>
        <version_id>4.0</version_id>
        <local_identifier>Derived_Geometry</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Derived_Geometry class is a container for surface based observations 
            (lander or rover). It is used to provide some geometric quantities relative to a 
            specific Reference Coordinate Space.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>target_name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>incidence_angle</identifier_reference>
            <identifier_reference>emission_angle</identifier_reference>
            <identifier_reference>phase_angle</identifier_reference>
            <identifier_reference>instrument_azimuth</identifier_reference>
            <identifier_reference>instrument_elevation</identifier_reference>
            <identifier_reference>solar_azimuth</identifier_reference>
            <identifier_reference>solar_elevation</identifier_reference>
            <identifier_reference>start_azimuth</identifier_reference>
            <identifier_reference>stop_azimuth</identifier_reference>
            <identifier_reference>target_heliocentric_distance</identifier_reference>
            <identifier_reference>solar_image_clock_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Solar_Direction</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Motion_Counter class --> 
    
    <DD_Class>
        <name>Motion_Counter</name>
        <version_id>1.0</version_id>
        <local_identifier>Motion_Counter</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Motion_Counter class provides a set of integers that
            describe a (potentially) unique location (position / orientation) for a
            rover or other movable object. Each time an event occurs that results in  
            a movement, a new motion counter value is created. This includes 
            intentional motion due to drive commands, as well as potential motion
            due to other articulating devices, such as arms or antennae. This motion
            counter (or part of it) is used as a reference to define instances of
            coordinate systems that can move such as SITE or ROVER frames. The 
            motion counter is defined in a mission-specific manner. Although the 
            original intent was to have incrementing indices (e.g., MER), the motion 
            counter could also contain any integer values that conform to the above 
            definition, such as time or spacecraft clock values.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Motion_Counter_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Geometry_Lander class -->
    
    <DD_Class>
        <name>Geometry_Lander</name>
        <version_id>1.1</version_id>
        <local_identifier>Geometry_Lander</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Geometry_Lander class is a container for all geometric information in the label
          relating to a landed spacecraft, including rovers.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>geometry_state</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.description</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Articulation_Device_Parameters</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Camera_Model_Parameters</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Definition</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Derived_Geometry</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Motion_Counter</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Geometry</name>
        <version_id>1.0</version_id>
        <local_identifier>Geometry</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Geometry class is a container for all geometric 
        	information in the label. The Image_Display_Geometry class should
        	have one instance if the primary data object is an Array object 
        	for which two of the dimensions are suitable for display in the
          vertical (line) and horizontal (sample) dimensions of a display
          device. 
          Multiple instances of the Image_Display_Geometry class are only 
          appropriate if the data product contains multiple Array objects 
          and the orientations of the various objects are not the same.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>true</element_flag>
        <DD_Association>
            <identifier_reference>SPICE_Kernel_Files</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Expanded_Geometry</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Image_Display_Geometry</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Orbiter</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Lander</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
<!-- Additional Schematron rules -->    

    <DD_Rule>
        <local_identifier>Expanded_Geometry_1</local_identifier>  
        <rule_context>geom:Expanded_Geometry/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_expanded_geometry'
            </rule_test>
            <rule_message>For Internal_Reference in Expanded_Geometry, reference_type must equal 'geometry_to_expanded_geometry'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Expanded_Geometry_2</local_identifier>  
        <rule_context>geom:Expanded_Geometry/pds:Local_Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:local_reference_type = 'to_expanded_geometry'
            </rule_test>
            <rule_message>For Local_Internal_Reference in geom:Expanded_Geometry, local_reference_type must equal 'to_expanded_geometry'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>
    
    <DD_Rule>
        <local_identifier>spice_kernel_0</local_identifier>  
        <rule_context>geom:SPICE_Kernel_Identification/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_SPICE_kernel'
            </rule_test>
            <rule_message>For Internal_Reference in SPICE_Kernel_Identification, reference_type must equal 'geometry_to_SPICE_kernel'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>camera_model_parameters_0</local_identifier>  
        <rule_context>geom:Camera_Model_Parameters/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_camera_model'
            </rule_test>
            <rule_message>For Internal_Reference in Camera_Model_Parameters, reference_type must equal 'geometry_to_camera_model'.
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>coord_space_0</local_identifier>  
        <rule_context>//geom:Coordinate_Space_Reference/pds:Local_Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:local_reference_type = 'to_reference_coordinate_space'
            </rule_test>
            <rule_message>For Local_Internal_Reference in geom:Coordinate_Space_Reference, local_reference_type must equal 'to_reference_coordinate_space'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Illumination_Specific_0</local_identifier>
        <rule_context>//geom:Illumination_Geometry/geom:Illumination_Specific</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:reference_location) and not (geom:reference_pixel_location) and not (geom:Reference_Pixel))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:reference_location, geom:reference_pixel_location, geom:Reference_Pixel.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Central_Body_Identification_0</local_identifier>
        <rule_context>//geom:Central_Body_Identification</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:body_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:body_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Central_Body_Identification_1</local_identifier>  
        <rule_context>//geom:Central_Body_Identification/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_body'
            </rule_test>
            <rule_message>For Internal_Reference in Central_Body_Identification, reference_type must equal 'geometry_to_body'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Body_Identification_Base_0</local_identifier>  
        <rule_context>//geom:Body_Identification_Base/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_body'
            </rule_test>
            <rule_message>For Internal_Reference in Body_Identification_Base, reference_type must equal 'geometry_to_body'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Coordinate_System_Origin_Identification_0</local_identifier>
        <rule_context>//geom:Coordinate_System_Origin_Identification</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:body_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:body_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Coordinate_System_Origin_Identification_1</local_identifier>  
        <rule_context>//geom:Coordinate_System_Origin_Identification/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_body'
            </rule_test>
            <rule_message>For Internal_Reference in Coordinate_System_Origin_Identification, reference_type must equal 'geometry_to_body'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Observer_Identification_0</local_identifier>
        <rule_context>//geom:Observer_Identification</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:body_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:body_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Observer_Identification_1</local_identifier>  
        <rule_context>//geom:Observer_Identification/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_body'
            </rule_test>
            <rule_message>For Internal_Reference in geom:Observer_Identification, reference_type must equal 'geometry_to_body'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Geometry_Target_Identification_0</local_identifier>
        <rule_context>//geom:Geometry_Target_Identification</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:body_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:body_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Geometry_Target_Identification_1</local_identifier>  
        <rule_context>//geom:Geometry_Target_Identification/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_body'
            </rule_test>
            <rule_message>For Internal_Reference in geom:Geometry_Target_Identification, reference_type must equal 'geometry_to_body'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Reference_Frame_Identification_0</local_identifier>
        <rule_context>//geom:Reference_Frame_Identification</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:frame_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:frame_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Reference_Frame_Identification_1</local_identifier>  
        <rule_context>//geom:Reference_Frame_Identification/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_reference_frame'
            </rule_test>
            <rule_message>For Internal_Reference in geom:Reference_Frame_Identification, reference_type must equal 'geometry_to_reference_frame'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Frame_Identification_Base_0</local_identifier>
        <rule_context>//geom:Frame_Identification_Base/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_reference_frame'
            </rule_test>
            <rule_message>For Internal_Reference in geom:Frame_Identification_Base, reference_type must equal 'geometry_to_reference_frame'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Rotate_From_0</local_identifier>
        <rule_context>//geom:Rotate_From</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:frame_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:frame_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Rotate_From_1</local_identifier>  
        <rule_context>//geom:Rotate_From/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_reference_frame'
            </rule_test>
            <rule_message>For Internal_Reference in geom:Rotate_From, reference_type must equal 'geometry_to_reference_frame'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Rotate_To_0</local_identifier>
        <rule_context>//geom:Rotate_To</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:frame_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:frame_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Rotate_To_1</local_identifier>  
        <rule_context>//geom:Rotate_To/pds:Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:reference_type = 'geometry_to_reference_frame'
            </rule_test>
            <rule_message>For Internal_Reference in geom:Rotate_To, reference_type must equal 'geometry_to_reference_frame'
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Image_Display_Geometry_0</local_identifier>  
        <rule_context>geom:Image_Display_Geometry/pds:Local_Internal_Reference</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>pds:local_reference_type = 'display_to_data_object'
            </rule_test>
            <rule_message>For Local_Internal_Reference in geom:Image_Display_Geometry, local_reference_type must equal 'display_to_data_object'.
            </rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Pixel_Intercept_0</local_identifier>
        <rule_context>geom:Pixel_Intercept</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:reference_pixel_location) and not (geom:Reference_Pixel))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:reference_pixel_location, geom:Reference_Pixel.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Geometry_Orbiter_0</local_identifier>
        <rule_context>geom:Geometry_Orbiter</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:geometry_start_time_utc) and not (geom:geometry_stop_time_utc))  then false() else true()</rule_test>
            <rule_message>geom:geometry_start_time_utc and geom:geometry_stop_time_utc, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:geometry_stop_time_utc) and not (geom:geometry_start_time_utc))  then false() else true()</rule_test>
            <rule_message>geom:geometry_start_time_utc and geom:geometry_stop_time_utc, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

<!--  Min-Max & Start-Stop pair rules  -->

    <DD_Rule>
        <local_identifier>Illumination_1</local_identifier>
        <rule_context>geom:Illumination_Min_Max</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_emission_angle) and not (geom:maximum_emission_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_emission_angle and geom:maximum_emission_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_emission_angle) and not (geom:minimum_emission_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_emission_angle and geom:maximum_emission_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_incidence_angle) and not (geom:maximum_incidence_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_incidence_angle and geom:maximum_incidence_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_incidence_angle) and not (geom:minimum_incidence_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_incidence_angle and geom:maximum_incidence_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_phase_angle) and not (geom:maximum_phase_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_phase_angle and geom:maximum_phase_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_phase_angle) and not (geom:minimum_phase_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_phase_angle and geom:maximum_phase_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_solar_elongation) and not (geom:maximum_solar_elongation))  then false() else true()</rule_test>
            <rule_message>geom:minimum_solar_elongation and geom:maximum_solar_elongation, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_solar_elongation) and not (geom:minimum_solar_elongation))  then false() else true()</rule_test>
            <rule_message>geom:minimum_solar_elongation and geom:maximum_solar_elongation, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>
    
    <DD_Rule>
        <local_identifier>Illumination_2</local_identifier>
        <rule_context>geom:Illumination_Start_Stop</rule_context>    
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>ancestor::geom:Geometry_Orbiter/geom:geometry_start_time_utc and ancestor::geom:Geometry_Orbiter/geom:geometry_stop_time_utc</rule_test>
            <rule_message>geom:If you use the Illumination_Start_Stop class, you must give values for Geometry_Orbiter/geometry_start_time_utc and Geometry_Orbiter/geometry_stop_time_utc.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_emission_angle) and not (geom:stop_emission_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_emission_angle and geom:stop_emission_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_emission_angle) and not (geom:start_emission_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_emission_angle and geom:stop_emission_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_incidence_angle) and not (geom:stop_incidence_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_incidence_angle and geom:stop_incidence_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_incidence_angle) and not (geom:start_incidence_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_incidence_angle and geom:stop_incidence_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_phase_angle) and not (geom:stop_phase_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_phase_angle and geom:stop_phase_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_phase_angle) and not (geom:start_phase_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_phase_angle and geom:stop_phase_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_solar_elongation) and not (geom:stop_solar_elongation))  then false() else true()</rule_test>
            <rule_message>geom:start_solar_elongation and geom:stop_solar_elongation, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_solar_elongation) and not (geom:start_solar_elongation))  then false() else true()</rule_test>
            <rule_message>geom:start_solar_elongation and geom:stop_solar_elongation, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Surface_Geom_1</local_identifier>
        <rule_context>geom:Surface_Geometry_Min_Max</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_latitude) and not (geom:maximum_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_latitude and geom:maximum_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_latitude) and not (geom:minimum_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_latitude and geom:maximum_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_longitude) and not (geom:maximum_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_longitude and geom:maximum_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_longitude) and not (geom:minimum_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_longitude and geom:maximum_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subsolar_azimuth) and not (geom:maximum_subsolar_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_azimuth and geom:maximum_subsolar_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subsolar_azimuth) and not (geom:minimum_subsolar_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_azimuth and geom:maximum_subsolar_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subsolar_latitude) and not (geom:maximum_subsolar_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_latitude and geom:maximum_subsolar_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subsolar_latitude) and not (geom:minimum_subsolar_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_latitude and geom:maximum_subsolar_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subsolar_longitude) and not (geom:maximum_subsolar_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_longitude and geom:maximum_subsolar_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subsolar_longitude) and not (geom:minimum_subsolar_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_longitude and geom:maximum_subsolar_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subspacecraft_azimuth) and not (geom:maximum_subspacecraft_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_azimuth and geom:maximum_subspacecraft_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subspacecraft_azimuth) and not (geom:minimum_subspacecraft_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_azimuth and geom:maximum_subspacecraft_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subspacecraft_latitude) and not (geom:maximum_subspacecraft_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_latitude and geom:maximum_subspacecraft_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subspacecraft_latitude) and not (geom:minimum_subspacecraft_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_latitude and geom:maximum_subspacecraft_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subspacecraft_longitude) and not (geom:maximum_subspacecraft_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_longitude and geom:maximum_subspacecraft_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subspacecraft_longitude) and not (geom:minimum_subspacecraft_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_longitude and geom:maximum_subspacecraft_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Surface_Geom_2</local_identifier>
        <rule_context>geom:Surface_Geometry_Start_Stop</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_latitude) and not (geom:lat_long_method))  then false() else true()</rule_test>
            <rule_message>If you give geom:start_latitude and geom:stop_latitude, then a value for lat_long_method must be given.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>ancestor::geom:Geometry_Orbiter/geom:geometry_start_time_utc and ancestor::geom:Geometry_Orbiter/geom:geometry_stop_time_utc</rule_test>
            <rule_message>geom:If you use the Surface_Geometry_Start_Stop class, you must give values for Geometry_Orbiter/geometry_start_time_utc and Geometry_Orbiter/geometry_stop_time_utc.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_latitude) and not (geom:stop_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_latitude and geom:stop_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_latitude) and not (geom:start_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_latitude and geom:stop_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_longitude) and not (geom:stop_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_longitude and geom:stop_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_longitude) and not (geom:start_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_longitude and geom:stop_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subsolar_azimuth) and not (geom:stop_subsolar_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_azimuth and geom:stop_subsolar_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subsolar_azimuth) and not (geom:start_subsolar_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_azimuth and geom:stop_subsolar_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subsolar_latitude) and not (geom:stop_subsolar_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_latitude and geom:stop_subsolar_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subsolar_latitude) and not (geom:start_subsolar_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_latitude and geom:stop_subsolar_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subsolar_longitude) and not (geom:stop_subsolar_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_longitude and geom:stop_subsolar_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subsolar_longitude) and not (geom:start_subsolar_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_longitude and geom:stop_subsolar_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subspacecraft_azimuth) and not (geom:stop_subspacecraft_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_azimuth and geom:stop_subspacecraft_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subspacecraft_azimuth) and not (geom:start_subspacecraft_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_azimuth and geom:stop_subspacecraft_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subspacecraft_latitude) and not (geom:stop_subspacecraft_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_latitude and geom:stop_subspacecraft_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subspacecraft_latitude) and not (geom:start_subspacecraft_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_latitude and geom:stop_subspacecraft_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subspacecraft_longitude) and not (geom:stop_subspacecraft_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_longitude and geom:stop_subspacecraft_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subspacecraft_longitude) and not (geom:start_subspacecraft_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_longitude and geom:stop_subspacecraft_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Distances_1</local_identifier>
        <rule_context>geom:Distances_Min_Max</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_geocentric_distance) and not (geom:maximum_spacecraft_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_geocentric_distance and geom:maximum_spacecraft_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_geocentric_distance) and not (geom:minimum_spacecraft_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_geocentric_distance and geom:maximum_spacecraft_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_heliocentric_distance) and not (geom:maximum_spacecraft_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_heliocentric_distance and geom:maximum_spacecraft_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_heliocentric_distance) and not (geom:minimum_spacecraft_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_heliocentric_distance and geom:maximum_spacecraft_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_central_body_distance) and not (geom:maximum_spacecraft_central_body_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_central_body_distance and geom:maximum_spacecraft_central_body_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_central_body_distance) and not (geom:minimum_spacecraft_central_body_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_central_body_distance and geom:maximum_spacecraft_central_body_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_target_center_distance) and not (geom:maximum_spacecraft_target_center_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_center_distance and geom:maximum_spacecraft_target_center_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_target_center_distance) and not (geom:minimum_spacecraft_target_center_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_center_distance and geom:maximum_spacecraft_target_center_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_target_boresight_intercept_distance) and not (geom:maximum_spacecraft_target_boresight_intercept_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_boresight_intercept_distance and geom:maximum_spacecraft_target_boresight_intercept_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_target_boresight_intercept_distance) and not (geom:minimum_spacecraft_target_boresight_intercept_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_boresight_intercept_distance and geom:maximum_spacecraft_target_boresight_intercept_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_target_subspacecraft_distance) and not (geom:maximum_spacecraft_target_subspacecraft_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_subspacecraft_distance and geom:maximum_spacecraft_target_subspacecraft_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_target_subspacecraft_distance) and not (geom:minimum_spacecraft_target_subspacecraft_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_subspacecraft_distance and geom:maximum_spacecraft_target_subspacecraft_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_target_geocentric_distance) and not (geom:maximum_target_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_geocentric_distance and geom:maximum_target_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_target_geocentric_distance) and not (geom:minimum_target_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_geocentric_distance and geom:maximum_target_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_target_heliocentric_distance) and not (geom:maximum_target_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_heliocentric_distance and geom:maximum_target_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_target_heliocentric_distance) and not (geom:minimum_target_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_heliocentric_distance and geom:maximum_target_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_target_ssb_distance) and not (geom:maximum_target_ssb_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_ssb_distance and geom:maximum_target_ssb_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_target_ssb_distance) and not (geom:minimum_target_ssb_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_ssb_distance and geom:maximum_target_ssb_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Distances_2</local_identifier>
        <rule_context>geom:Distances_Start_Stop</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>ancestor::geom:Geometry_Orbiter/geom:geometry_start_time_utc and ancestor::geom:Geometry_Orbiter/geom:geometry_stop_time_utc</rule_test>
            <rule_message>geom:If you use the Distances_Start_Stop class, you must give values for Geometry_Orbiter/geometry_start_time_utc and Geometry_Orbiter/geometry_stop_time_utc.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_geocentric_distance) and not (geom:stop_spacecraft_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_geocentric_distance and geom:stop_spacecraft_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_geocentric_distance) and not (geom:start_spacecraft_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_geocentric_distance and geom:stop_spacecraft_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_heliocentric_distance) and not (geom:stop_spacecraft_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_heliocentric_distance and geom:stop_spacecraft_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_heliocentric_distance) and not (geom:start_spacecraft_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_heliocentric_distance and geom:stop_spacecraft_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_central_body_distance) and not (geom:stop_spacecraft_central_body_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_central_body_distance and geom:stop_spacecraft_central_body_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_central_body_distance) and not (geom:start_spacecraft_central_body_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_central_body_distance and geom:stop_spacecraft_central_body_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_target_center_distance) and not (geom:stop_spacecraft_target_center_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_center_distance and geom:stop_spacecraft_target_center_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_target_center_distance) and not (geom:start_spacecraft_target_center_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_center_distance and geom:stop_spacecraft_target_center_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_target_boresight_intercept_distance) and not (geom:stop_spacecraft_target_boresight_intercept_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_boresight_intercept_distance and geom:stop_spacecraft_target_boresight_intercept_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_target_boresight_intercept_distance) and not (geom:start_spacecraft_target_boresight_intercept_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_boresight_intercept_distance and geom:stop_spacecraft_target_boresight_intercept_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_target_subspacecraft_distance) and not (geom:stop_spacecraft_target_subspacecraft_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_subspacecraft_distance and geom:stop_spacecraft_target_subspacecraft_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_target_subspacecraft_distance) and not (geom:start_spacecraft_target_subspacecraft_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_subspacecraft_distance and geom:stop_spacecraft_target_subspacecraft_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_target_geocentric_distance) and not (geom:stop_target_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_geocentric_distance and geom:stop_target_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_target_geocentric_distance) and not (geom:start_target_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_geocentric_distance and geom:stop_target_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_target_heliocentric_distance) and not (geom:stop_target_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_heliocentric_distance and geom:stop_target_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_target_heliocentric_distance) and not (geom:start_target_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_heliocentric_distance and geom:stop_target_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_target_ssb_distance) and not (geom:stop_target_ssb_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_ssb_distance and geom:stop_target_ssb_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_target_ssb_distance) and not (geom:start_target_ssb_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_ssb_distance and geom:stop_target_ssb_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_time) and not (geom:stop_time))  then false() else true()</rule_test>
            <rule_message>geom:start_time and geom:stop_time, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_time) and not (geom:start_time))  then false() else true()</rule_test>
            <rule_message>geom:start_time and geom:stop_time, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>
</Ingest_LDD> 
